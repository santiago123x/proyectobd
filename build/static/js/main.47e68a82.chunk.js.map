{"version":3,"sources":["LOGIN.svg","Componentes/Login/Login.js","Componentes/Login/crearPersona.js","Componentes/Login/Register.js","Componentes/LoginAdmin.js","LoginPrin.js","Componentes/Informes.js","Componentes/InterfazDoc/InformesDoc.js","Componentes/Mapa/Markers.js","Componentes/Mapa/Mapa.js","Componentes/InterfazDoc/mapaDoctor.js","Componentes/InterfazDoc/Registro.js","Componentes/InterfazDoc/Medicamentos.js","Componentes/InterfazDoc/navDoc.js","Componentes/interfazAdmin/crearDoctor.js","Componentes/interfazAdmin/informesAdmin.js","Componentes/interfazAdmin/mapaAdmin.js","Componentes/interfazAdmin/navAdmin.js","Routes.js","reportWebVitals.js","index.js"],"names":["Login","props","state","usuario","contraseña","idusu","algo","usu","redirect","tipou","handleChange","bind","event","target","value","name","this","setState","length","fetch","then","response","json","usua","Swal","fire","icon","title","text","nickname","showConfirmButton","timer","tipousuario","idusuario","console","log","from","to","className","ref","containerRef","id","src","loginImg","Form","FormGroup","InputGroup","InputGroupText","class","Input","placeholder","type","bsSize","onChange","required","Button","size","color","onClick","login","aria-hidden","React","Component","CrearPersona","nombre","apellido","barrio","identificacion","email","telefono","fechaN","barrios","tiposdoc","modalInser","idperso","viaP","selViaP","numViaP","numViaS","numCasa","tipoInm","selTipoInm","comTipoInm","bloqueInt","selBloqueInt","comBloqueInt","input","inputLabel","showCancelButton","inputPlaceholder","corritos","push","valor","document","getElementById","filter","mail","texto","toLowerCase","i","indexOf","charAt","inputValidator","Promise","resolve","tiene_letras","tel","tele","res","result","numerodoc","tipodoc","selectedIndex","fechanaci","idviaprincipal","numeroviap","numerovias","numerocasa","idtipoinmueble","idbloqueinterior","numeroinmueble","numerobloque","body","method","headers","JSON","stringify","idpersona","bodyD","cancelar","mostarInser","nom","trim","apell","tipod","doc","barr","fecha","ft","Date","setDate","getDate","style","display","validaInmBlo","crearPerso","Modal","centered","isOpen","ModalHeader","ModalBody","selected","disabled","map","tipo","idtipo","tipodocument","bar","id_barrio","InputGroupAddon","addonType","via","nombrevia","inm","nombreinmueble","blo","nombrebloqueoint","ButtonGroup","agregarEmail","borrarEmail","agregarTel","borrarTel","ModalFooter","superValidacion","Register","tipousuario2","codi","codigo","personas","usuexi","yaregis","index","validainfo","window","confirm","contra","tipo_usu","location","reload","error","message","mostrarForm","per","recargar","Row","Col","crearUsuario","LoginAdmin","isLogginActive","rightSide","classList","add","remove","prevState","current","currentActive","container","changeState","RightSide","LoginPrin","tipoLogin","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","font-size","d","stroke","r","toFixed","Informes","onPieEnter","data","activeIndex","data01","color2","edades","visitas","visi","fechavisi","modal","obs","telEmer","emailEmer","modalEmail","modalTel","urginf","pacientes","paciente","observacion","randomColor","floor","random","toString","slice","idpac","idpaciente","titele","visita","anio","substr","mes","dia","parseInt","count","colorRamdo","idper","idPer","role","aria-label","mostrarCPB","mostrarED","mostrarVI","mostrarUR","width","height","activeShape","dataKey","nameKey","onMouseEnter","entry","margin","top","right","left","bottom","strokeDasharray","Table","striped","bordered","hover","vis","nombrepac","apellidopac","nombredoc","apellidodoc","medicamento","temperatura","to_char","hora","toggle","observaciones","cerrarM","pac","seleccionarPaciente","urg","nomburg","apeurg","relacion","nompa","apepa","ema","cancelarEmail","cancelarTel","InformesDoc","Markers","places","place","Marker","position","lng","longitud","lat","latitud","Tooltip","Popup","Mapa","geoloc","Map","center","zoom","TileLayer","url","attribution","MapaDoctor","Registro","medicamentos","nombreP","direccionP","edadP","fechaV","horaV","peso","presionA","dosis","idDoc","direccion","año","hoy","añoAc","getFullYear","mesAc","getMonth","diaAc","visibility","temp","presion","medi","idPac","pres","medica","crearVisita","Label","tipodD","numerdD","readOnly","eps","terminarVisita","step","med","idmedicamento","FormControl","as","validacion","Medicamentos","med1","med1lab1","med1lab2","med1lab3","med1lab4","totalMed1","med2","med2lab1","med2lab2","med2lab3","med2lab4","totalMed2","med3","med3lab1","med3lab2","med3lab3","med3lab4","cantidad","total1","total2","total3","totalMed3","matrix","fila","j","inven","lab","labo","exis","validaCantidad","cant","idmed","idlab","iddoc","setear","componentDidMount","descontar","NavDoc","match","idusuD","idpD","nombreD","apellidoD","params","iddoctor","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","data-toggle","data-target","aria-controls","aria-expanded","activeClassName","logOut","path","exact","CrearDoctor","admin","persona","modalEmer","modalInserD","modalInserP","modalActuD","modalParen","emer","perEmer","tablaEmer","telEmerB","emailEmerB","seleccionada","emerEma","emerTel","paren","perParen","tablaParen","nombrePa","selecdoc","selecpa","listDoc","listPac","universidad","universidades","epss","nombreAD","apellidoAD","tipoD_AD","idenAD","barrioAD","fechaAD","emailAD","emailBAD","telAD","telBAD","uniAD","epsAD","idPerDoc","viaPD","numViaPD","numViaSD","numCasaD","tipoInmD","comTipoInmD","bloqueIntD","comBloqueIntD","idDirecDoc","hayEmail","hayTel","tiposDOC","numIP","geoPLA","geoPLO","docSelP","ciudadP","selCiudades","haydoc","haypac","numintegrantes","ciudadcontagio","getHours","getMinutes","getSeconds","bodyG","bodyR","cancelarP","indexU","indexE","identidadsalud","iduniversidad","cancelarD","iddireccion","bodyDirec","cancelarActuD","idp","ideps","a","telefonoAD","bool","arreglo","splice","cancelarParen","modalEmergencia","rela","tieneAlMenosUno","cancelarEmer","idemail","email2","idpersona2","emi","includes","hayemail2","hayaquiemail","idtelefono","tel2","telhay2","hayaquitel","hayDoctor","hayPaciente","modalPaciente","modalDoctor","cargarDatosActuDoc","borrarDoctor","uni","actuDoc","crearPac","recargarP","validaM","validaActuD","href","ciu","idciudad","ciudad","validaPaci","nombreuni","ep","nombreeps","crearDoctor","borrarEmailAD","borrarTelAD","superValidacionActuDoc","float","agregarParen","borrarParen","crearParent","agregarEmer","borrarEmer","crearEmer","emerEmailAgre","borrarEmaEmer","creaEmerEmail","emerTelAgre","borrarTelEmer","creaEmerTel","InformesAdmin","MapaAdmin","NavAdmin","App","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.47e68a82.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/LOGIN.17089cac.svg\";","import React from \"react\";\r\nimport loginImg from \"../../LOGIN.svg\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Button, Form, FormGroup, InputGroup, InputGroupText,  Input } from \"reactstrap\";\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport 'sweetalert2/src/sweetalert2.scss';\r\n\r\n\r\nexport class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            usuario: '',\r\n            contraseña: '',\r\n            idusu: [],\r\n            algo:false,\r\n            usu: null,\r\n            redirect: null,\r\n            tipou:'',\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    async login() {\r\n        try {\r\n            if (this.state.usuario.length > 0 && this.state.contraseña.length > 0) {\r\n\r\n                await fetch(`http://localhost:5000/usuario/${this.state.usuario}`)\r\n                    .then(response => response.json())\r\n                    .then(usua => {\r\n                        if (usua.length === 0) {\r\n\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Oops...',\r\n                                text: 'No existe un usuario con ese nick',\r\n\r\n                            })\r\n\r\n                        } else {\r\n\r\n                            let usu = usua[0];\r\n\r\n                            if (usu.contraseña === this.state.contraseña) {\r\n\r\n                                Swal.fire({\r\n                                    icon: 'success',\r\n                                    title: 'Bienvenido ' + usu.nickname,\r\n                                    showConfirmButton: false,\r\n                                    timer: 1500\r\n                                })\r\n                                this.setState({ usu : usu})\r\n                                this.setState({tipou: usu.tipousuario})\r\n                                if(this.state.tipou==='super'){\r\n                                    this.setState({ redirect: \"/NavAdmin/\"+this.state.usu.idusuario });\r\n                                }else{\r\n                                    this.setState({ redirect: \"/NavDoc/\"+this.state.usu.idusuario });\r\n                                }\r\n                                \r\n                                \r\n                            } else\r\n\r\n                                Swal.fire({\r\n                                    icon: 'error',\r\n                                    title: 'Oops...',\r\n                                    text: 'Contraseña invalida intente de nuevo',\r\n\r\n                                })\r\n                        }\r\n                    });\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Ingrese campos Validos',\r\n\r\n                })\r\n            }\r\n        } catch (e) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Ingrese campos Validos',\r\n\r\n            })\r\n            //alert('Error: ' + e.message);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        if (this.state.redirect)  {\r\n            console.log('hola '+this.state.usu.idusuario)\r\n            return <Redirect from='/' to={\r\n               this.state.redirect\r\n            } />\r\n            \r\n          }\r\n          \r\n        \r\n        return (\r\n            <div className=\"base-container\" ref={this.props.containerRef}>\r\n                <div className=\"header mb-3 mt-4\" id=\"login\"><h2 className=\"m-2\" >Login</h2></div>\r\n                <div className=\"content\">\r\n                    <div className=\"image\">\r\n                        <img src={loginImg} />\r\n\r\n                    </div>\r\n                    <Form id='envio' >\r\n\r\n\r\n                        <div className=\"mb-3\">\r\n                            <FormGroup  >\r\n\r\n                                <InputGroup>\r\n                                    <InputGroupText><i class=\"fa fa-user\"></i></InputGroupText>\r\n                                    <Input id=\"usuario\"\r\n                                        placeholder=\"Usuario\"\r\n                                        className=\"form-control\"\r\n                                        name=\"usuario\"\r\n                                        type=\"text\"\r\n                                        bsSize=\"lg\"\r\n                                        value={this.state.usuario}\r\n                                        onChange={this.handleChange}  required  />\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"mb-3\" >\r\n                            <FormGroup  >\r\n                                <InputGroup>\r\n                                    <InputGroupText><i class=\"fa fa-lock\"></i></InputGroupText>\r\n                                    <Input\r\n                                        id=\"contraseña\"\r\n                                        placeholder=\"Contraseña\"\r\n                                        className=\"form-control\"\r\n                                        name=\"contraseña\"\r\n                                        type=\"password\"\r\n                                        bsSize=\"lg\"\r\n                                        value={this.state.contraseña}\r\n                                        onChange={this.handleChange}\r\n                                    /> </InputGroup> </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"footer\">\r\n                            <Button className=\"mt-5\" size=\"lg\" color='primary' onClick={() => this.login()} >\r\n                                Login <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\r\n        </Button>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Button, ButtonGroup, Form, FormGroup, Input, InputGroup, InputGroupAddon, Modal, ModalBody, ModalHeader, ModalFooter } from \"reactstrap\";\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport 'sweetalert2/src/sweetalert2.scss';\r\nimport \"./syle.scss\";\r\n\r\nexport class CrearPersona extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nombre: '',\r\n      apellido: '',\r\n      barrio: '',\r\n      identificacion: '',\r\n      email: [],\r\n      telefono: [],\r\n      fechaN: '',\r\n      barrios: [],\r\n      tiposdoc: [],\r\n      modalInser: false,\r\n      idperso: '',\r\n      //Direccion\r\n      viaP: null,\r\n      selViaP: [],\r\n      numViaP: '',\r\n      numViaS: '',\r\n      numCasa: '',\r\n      tipoInm: null,\r\n      selTipoInm: [],\r\n      comTipoInm: '',\r\n      bloqueInt: null,\r\n      selBloqueInt: [],\r\n      comBloqueInt: '',\r\n\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  async agregarEmail() {\r\n    var { value: email } = await Swal.fire({\r\n      title: 'Ingrese su Email',\r\n      input: 'email',\r\n      inputLabel: 'Su Correo Electronico es : ',\r\n      showCancelButton: true,\r\n      inputPlaceholder: 'Email'\r\n\r\n    })\r\n    if (email) {\r\n      var corritos = this.state.email\r\n      corritos.push(email)\r\n      this.setState({\r\n        email: corritos\r\n      });\r\n\r\n      Swal.fire(`Email Ingresado: ${email}`)\r\n    }\r\n  }\r\n\r\n  borrarEmail() {\r\n    var valor = document.getElementById('email').value;\r\n\r\n    this.setState({\r\n      email: this.state.email.filter(mail => mail !== valor)\r\n    });\r\n  }\r\n\r\n  tiene_letras(texto) {\r\n    var letras = 'abcdefghyjklmnñopqrstuvwxyz!\"}#$%&+)@.,-{/(=?¡';\r\n    texto = texto.toLowerCase();\r\n    for (var i = 0; i < texto.length; i++) {\r\n      if (letras.indexOf(texto.charAt(i), 0) !== -1) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  async agregarTel() {\r\n    var { value: tel } = await Swal.fire({\r\n      title: 'Ingrese su Telefono',\r\n      input: 'text',\r\n      inputLabel: 'Su Telefono es : ',\r\n      inputPlaceholder: 'Telefonos',\r\n      showCancelButton: true,\r\n      inputValidator: (value) => {\r\n        return new Promise((resolve) => {\r\n          if ((value.length === 10 || value.length === 7) && this.tiene_letras(value)) {\r\n            resolve()\r\n          } else {\r\n            resolve('Debe tener 10(Celular) o 7(Fijo)  Digitos y estos deben ser Numeros')\r\n          }\r\n        }\r\n\r\n        )\r\n      }\r\n    })\r\n    if (tel && tel.length <= 10) {\r\n      var corritos = this.state.telefono\r\n      corritos.push(tel)\r\n      this.setState({\r\n        telefono: corritos\r\n      });\r\n\r\n      Swal.fire(`Telefono Ingresado: ${tel}`)\r\n    }\r\n  }\r\n\r\n  borrarTel() {\r\n    var valor = document.getElementById('telefono').value;\r\n\r\n    this.setState({\r\n      telefono: this.state.telefono.filter(tele => tele !== valor)\r\n    });\r\n  }\r\n  async componentDidMount() {\r\n    await fetch('http://localhost:5000/tipodoc/')\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            tiposdoc: result\r\n          });\r\n        }\r\n      )\r\n\r\n    await fetch('http://localhost:5000/barrio/')\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            barrios: result\r\n          });\r\n        }\r\n      )\r\n\r\n    await fetch('http://localhost:5000/viap/')\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            selViaP: result\r\n          });\r\n        }\r\n      )\r\n\r\n    await fetch('http://localhost:5000/inmueble/')\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            selTipoInm: result\r\n          });\r\n        }\r\n      )\r\n\r\n    await fetch('http://localhost:5000/bloque/')\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            selBloqueInt: result\r\n          });\r\n        }\r\n      )\r\n\r\n  }\r\n  mostarInser() {\r\n    this.setState({\r\n      modalInser: !this.state.modalInser\r\n    });\r\n  }\r\n\r\n  async crearPerso() {\r\n\r\n    var nombre = this.state.nombre;\r\n    var apellido = this.state.apellido;\r\n    var numerodoc = this.state.identificacion;\r\n    var tipodoc = document.getElementById('tipodoc').selectedIndex;\r\n    var fechanaci = this.state.fechaN;\r\n    var barrio = this.state.barrio;\r\n\r\n    // Direccion\r\n\r\n    var idviaprincipal = this.state.viaP;\r\n    var numeroviap = this.state.numViaP;\r\n    var numerovias = this.state.numViaS;\r\n    var numerocasa = this.state.numCasa;\r\n    var idtipoinmueble = this.state.tipoInm;\r\n    var idbloqueinterior = this.state.bloqueInt;\r\n    var numeroinmueble = this.state.comTipoInm;\r\n    var numerobloque = this.state.comBloqueInt;\r\n\r\n    const body = { nombre, apellido, tipodoc, numerodoc, barrio, fechanaci };\r\n    \r\n    await fetch('http://localhost:5000/persona',\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body)\r\n      });\r\n\r\n    await fetch(`http://localhost:5000/personaiden/${numerodoc}`)\r\n      .then(response => response.json())\r\n      .then(usua => {\r\n        this.setState({\r\n          idperso: usua[0].idpersona\r\n        })\r\n      });\r\n\r\n\r\n    var idpersona = this.state.idperso\r\n\r\n    const bodyD = { idviaprincipal, idpersona, numeroviap, numerovias, numerocasa, idtipoinmueble, idbloqueinterior, numeroinmueble, numerobloque }\r\n\r\n    await fetch(`http://localhost:5000/direccion/`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(bodyD)\r\n    });\r\n\r\n    if (this.state.email.length > 0) {\r\n      for (var i = 0; i < this.state.email.length; i++) {\r\n        var email = this.state.email[i];\r\n        let body = { email, idpersona }\r\n        await fetch('http://localhost:5000/email',\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body)\r\n          });\r\n\r\n      }\r\n    }\r\n\r\n    if (this.state.telefono.length > 0) {\r\n      for (var i = 0; i < this.state.telefono.length; i++) {\r\n        var telefono = this.state.telefono[i];\r\n        let body = { telefono, idpersona }\r\n        await fetch('http://localhost:5000/telefono',\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body)\r\n          });\r\n\r\n      }\r\n    }\r\n\r\n    await Swal.fire({\r\n      icon: 'success',\r\n      title: `Se ha agregado la Persona ${nombre} ${apellido}`,\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    })\r\n\r\n  \r\n    this.cancelar();\r\n    \r\n\r\n  }\r\n\r\n\r\n\r\n  cancelar() {\r\n    this.setState({\r\n      nombre: '',\r\n      apellido: '',\r\n      identificacion: '',\r\n      telefono : [],\r\n      email : [],\r\n      numViaP: '',\r\n      numViaS: '',\r\n      numCasa: '',\r\n      comTipoInm: '',\r\n      comBloqueInt: '',\r\n      fechaN : '',\r\n    })\r\n\r\n    this.mostarInser();\r\n\r\n  }\r\n  validaInmBlo() {\r\n    const tipoInm = document.getElementById('tipoInm').selectedIndex;\r\n    const comTipoInm = document.getElementById('comTipoInm').value;\r\n    const bloqueInt = document.getElementById('bloqueInt').selectedIndex;\r\n    const comBloqueInt = document.getElementById('comBloqueInt').value;\r\n\r\n    if (tipoInm === 0 && comTipoInm === '') {\r\n      if (bloqueInt === 0 && comBloqueInt === '') {\r\n        return true\r\n      }\r\n      else if (bloqueInt !== 0 && comBloqueInt !== '') {\r\n        return true\r\n      }\r\n    }\r\n    else if (tipoInm !== 0 && comTipoInm !== '') {\r\n      if (bloqueInt === 0 && comBloqueInt === '') {\r\n        return true\r\n      }\r\n      else if (bloqueInt !== 0 && comBloqueInt !== '') {\r\n        return true\r\n      }\r\n    } else {\r\n      return false\r\n    }\r\n\r\n  }\r\n\r\n  superValidacion() {\r\n    const nom = document.getElementById('nombre').value.trim();\r\n    const apell = document.getElementById('apellido').value.trim();\r\n    const tipod = document.getElementById('tipodoc').selectedIndex;\r\n    const doc = document.getElementById('identificacion').value.trim();\r\n    const barr = document.getElementById('barrio').selectedIndex;\r\n    const fecha = document.getElementById('fechaN').value;\r\n    const viaP = document.getElementById('viaP').selectedIndex;\r\n    const numViaP = document.getElementById('numViaP').value;\r\n    const numViaS = document.getElementById('numViaS').value;\r\n    const numCasa = document.getElementById('numCasa').value;\r\n\r\n\r\n    var ft = new Date(fecha)\r\n    ft.setDate(ft.getDate() + 1);\r\n    if (nom !== \"\" && nom.length <= 20) {\r\n      document.getElementById('snombre').style.display = 'none';\r\n      if (apell !== \"\" && apell.length <= 30) {\r\n        document.getElementById('sapellido').style.display = 'none';\r\n        if (tipod !== 0) {\r\n          document.getElementById('stipodoc').style.display = 'none';\r\n          if (doc !== \"\" && doc.length <= 30) {\r\n            document.getElementById('sidentificacion').style.display = 'none';\r\n            if (barr !== 0) {\r\n              document.getElementById('sbarrio').style.display = 'none';\r\n              if (ft <= new Date()) {\r\n                document.getElementById('sfechaN').style.display = 'none';\r\n\r\n                if (viaP !== 0 && numViaP !== '' && numViaS !== '' && numCasa !== '') {\r\n                  document.getElementById('sdireccion').style.display = 'none';\r\n                  if (this.validaInmBlo()) {\r\n                    document.getElementById('sinm').style.display = 'none';\r\n                    this.crearPerso();\r\n                  } else {\r\n                    document.getElementById('sinm').style.display = 'contents';\r\n                  }\r\n                } else {\r\n                  document.getElementById('sdireccion').style.display = 'contents';\r\n                }\r\n              } else {\r\n                document.getElementById('sfechaN').style.display = 'contents';\r\n              }\r\n\r\n            } else {\r\n              document.getElementById('sbarrio').style.display = 'contents';\r\n            }\r\n          } else {\r\n            document.getElementById('sidentificacion').style.display = 'contents';\r\n          }\r\n        } else {\r\n          document.getElementById('stipodoc').style.display = 'contents';\r\n        }\r\n      } else {\r\n        document.getElementById('sapellido').style.display = 'contents';\r\n      }\r\n    } else {\r\n      document.getElementById('snombre').style.display = 'contents';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"base-container\" id=\"persona\" ref={this.props.containerRef}>\r\n\r\n\r\n\r\n        <Button id=\"bper\" className=\"ml-3\" size=\"lg\" color='primary' onClick={() => this.mostarInser()} >\r\n          Crear Persona <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\r\n        </Button>\r\n\r\n        <Modal\r\n          size=\"md\"\r\n          centered isOpen={this.state.modalInser} id=\"insertar\">\r\n          <ModalHeader>\r\n            <div><h3>Registrar Persona</h3></div>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Form>\r\n              <div id=\"regisM\" className=\"contRegisM\">\r\n                <div className=\"mb-3\">\r\n                  <FormGroup  >\r\n                    <Input id=\"nombre\"\r\n                      placeholder=\"Nombre\"\r\n                      className=\"form-control\"\r\n                      name=\"nombre\"\r\n                      bsSize=\"md\"\r\n                      type=\"text\"\r\n                      value={this.state.nombre}\r\n                      onChange={this.handleChange} />\r\n                  </FormGroup>\r\n                  <span className=\"span\" id=\"snombre\">Debe Ingresar un Nombre</span>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <FormGroup  >\r\n\r\n                    <Input id=\"apellido\"\r\n                      placeholder=\"Apellido\"\r\n                      className=\"form-control\"\r\n                      name=\"apellido\"\r\n                      type=\"text\"\r\n                      bsSize=\"md\"\r\n                      value={this.state.apellido}\r\n                      onChange={this.handleChange} />\r\n                  </FormGroup>\r\n                  <span className=\"span\" id=\"sapellido\">Debe Ingresar un Apellido</span>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <FormGroup  >\r\n                    <Input id=\"tipodoc\"\r\n                      className=\"form-control\"\r\n                      name=\"identtipodocifacion\"\r\n                      type=\"select\"\r\n                      bsSize=\"md\"\r\n                      onChange={this.handleChange}>\r\n                      <option selected=\"true\" disabled=\"disabled\">Tipo de Documento</option>\r\n                      {this.state.tiposdoc.map(tipo => (\r\n                        <option value={tipo.idtipo}>\r\n                          {tipo.tipodocument}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <span className=\"span\" id=\"stipodoc\">Seleccione un Tipo de Documento valido</span>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <FormGroup  >\r\n\r\n                    <Input id=\"identificacion\"\r\n                      placeholder=\"Identificación\"\r\n                      className=\"form-control\"\r\n                      name=\"identificacion\"\r\n                      type=\"text\"\r\n                      bsSize=\"md\"\r\n                      value={this.state.identificacion}\r\n                      onChange={this.handleChange} />\r\n                  </FormGroup>\r\n                  <span className=\"span\" id=\"sidentificacion\">Debe Ingresar una Identificación Valida</span>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <FormGroup  >\r\n                    <Input id=\"barrio\"\r\n                      placeholder=\"Barrio\"\r\n                      className=\"form-control\"\r\n                      name=\"barrio\"\r\n                      type=\"select\"\r\n                      bsSize=\"md\"\r\n                      selectedIndex={this.state.barrio}\r\n                      onChange={this.handleChange}>\r\n                      <option selected=\"true\" disabled=\"disabled\">Barrios</option>\r\n                      {this.state.barrios.map(bar => (\r\n                        <option value={bar.id_barrio}>\r\n                          {bar.nombre}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <span className=\"span\" id=\"sbarrio\">Seleccione un Barrio</span>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" >\r\n                  <FormGroup  >\r\n                    <div className=\"mensaje\">\r\n                      <p className=\"oculto\">Fecha de Nacimiento</p>\r\n                      <Input\r\n                        id=\"fechaN\"\r\n                        placeholder=\"date placeholder\"\r\n                        className=\"form-control\"\r\n                        name=\"fechaN\"\r\n                        bsSize=\"md\"\r\n                        type=\"date\"\r\n                        value={this.state.fechaN}\r\n                        onChange={this.handleChange}\r\n                      /> </div></FormGroup>\r\n                  <span className=\"span\" id=\"sfechaN\">Debe Ingresar una Fecha Valida</span>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <FormGroup  >\r\n                    <div className=\"mensajeD\">\r\n                      <p className=\"ocultoD\">Dirección</p>\r\n                      <InputGroup>\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <Input id=\"viaP\"\r\n\r\n                            className=\"form-control bg-primary  text-white font-weight-bold\"\r\n                            name=\"viaP\"\r\n                            type=\"select\"\r\n                            bsSize=\"md\"\r\n                            selectedIndex={this.state.viaP}\r\n                            onChange={this.handleChange}>\r\n                            <option selected=\"true\" disabled=\"disabled\">Via Principal</option>\r\n                            {this.state.selViaP.map(via => (\r\n                              <option value={via.idviaprincipal}>\r\n                                {via.nombrevia}\r\n                              </option>\r\n                            ))}\r\n                          </Input>\r\n                        </InputGroupAddon>\r\n                        <Input id=\"numViaP\"\r\n\r\n                          className=\"form-control\"\r\n                          name=\"numViaP\"\r\n                          type=\"text\"\r\n                          bsSize=\"md\"\r\n                          value={this.state.numViaP}\r\n                          onChange={this.handleChange} />\r\n                        <h4 className='ml-1 mr-1 mt-1'> # </h4>\r\n                        <Input id=\"numViaS\"\r\n\r\n                          className=\"form-control\"\r\n                          name=\"numViaS\"\r\n                          type=\"text\"\r\n                          bsSize=\"md\"\r\n                          value={this.state.numViaS}\r\n                          onChange={this.handleChange} />\r\n                        <h4 className='ml-1 mr-1 mt-1'> -  </h4>\r\n                        <Input id=\"numCasa\"\r\n\r\n                          className=\"form-control\"\r\n                          name=\"numCasa\"\r\n                          type=\"text\"\r\n                          bsSize=\"md\"\r\n                          value={this.state.numCasa}\r\n                          onChange={this.handleChange} />\r\n                      </InputGroup>\r\n                    </div>\r\n                  </FormGroup>\r\n                  <span className=\"span\" id=\"sdireccion\">Debe Ingresar una Direccion Valida</span>\r\n                </div>\r\n                <div className=\"mb-3\" >\r\n                  <FormGroup >\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <Input\r\n                          id=\"tipoInm\"\r\n                          type=\"select\"\r\n\r\n                          className=\"form-control bg-primary  text-white font-weight-bold\"\r\n                          name=\"tipoInm\"\r\n                          bsSize=\"md\"\r\n                          selectedIndex={this.state.tipoInm}\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          <option>Tipo de Inmueble</option>\r\n                          {this.state.selTipoInm.map(inm => (\r\n                            <option value={inm.idtipoinmueble}>\r\n                              {inm.nombreinmueble}\r\n                            </option>\r\n                          ))}\r\n\r\n                        </Input>\r\n                      </InputGroupAddon>\r\n                      <Input id=\"comTipoInm\"\r\n                        placeholder='Num'\r\n                        className=\"form-control\"\r\n                        name=\"comTipoInm\"\r\n                        type=\"text\"\r\n                        bsSize=\"md\"\r\n                        value={this.state.comTipoInm}\r\n                        onChange={this.handleChange} />\r\n\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"mb-3\" >\r\n                  <FormGroup >\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <Input\r\n                          id=\"bloqueInt\"\r\n                          type=\"select\"\r\n\r\n                          className=\"form-control bg-primary  text-white font-weight-bold\"\r\n                          name=\"bloqueInt\"\r\n                          bsSize=\"md\"\r\n                          selectedIndex={this.state.bloqueInt}\r\n                          onChange={this.handleChange}\r\n\r\n                        >\r\n                          <option>Bloque o Interior</option>\r\n                          {this.state.selBloqueInt.map(blo => (\r\n                            <option value={blo.idbloqueinterior}>\r\n                              {blo.nombrebloqueoint}\r\n                            </option>\r\n                          ))}\r\n\r\n                        </Input>\r\n                      </InputGroupAddon>\r\n                      <Input id=\"comBloqueInt\"\r\n                        placeholder='Num'\r\n                        className=\"form-control\"\r\n                        name=\"comBloqueInt\"\r\n                        type=\"text\"\r\n                        bsSize=\"md\"\r\n                        value={this.state.comBloqueInt}\r\n                        onChange={this.handleChange} />\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n                  <span className=\"span\" id=\"sinm\">No debe dejar Campos Incompletos</span>\r\n                </div>\r\n                <div className=\"mb-3\" >\r\n                  <FormGroup >\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <ButtonGroup>\r\n                          <Button color=\"primary\" onClick={() => this.agregarEmail()}><i class=\"fa fa-plus\" /></Button>\r\n                          <Button color=\"primary\" onClick={() => this.borrarEmail()}><i class=\"fa fa-minus\" /></Button>\r\n                        </ButtonGroup>\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        id=\"email\"\r\n                        type=\"select\"\r\n                        placeholder=\"Email\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        bsSize=\"md\"\r\n\r\n                      >\r\n                        <option>Email</option>\r\n                        {this.state.email.map(mail => (\r\n                          <option >\r\n                            {mail}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"mb-3\" >\r\n                  <FormGroup >\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <ButtonGroup>\r\n                          <Button color=\"primary\" onClick={() => this.agregarTel()}><i class=\"fa fa-plus\" /></Button>\r\n                          <Button color=\"primary\" onClick={() => this.borrarTel()}><i class=\"fa fa-minus\" /></Button>\r\n                        </ButtonGroup>\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        id=\"telefono\"\r\n                        placeholder=\"Telefono\"\r\n                        className=\"form-control\"\r\n                        name=\"telefono\"\r\n                        bsSize=\"md\"\r\n                        type=\"select\">\r\n\r\n                        <option>Telefonos</option>\r\n                        {this.state.telefono.map(tel => (\r\n                          <option >\r\n                            {tel}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          </ModalBody>\r\n          <ModalFooter >\r\n            <Button color=\"success\" onClick={() => this.superValidacion()}>Registrar</Button>\r\n            <Button color=\"danger\" onClick={() => this.cancelar()}>Cancelar</Button>\r\n          </ModalFooter>\r\n        </Modal></div>\r\n\r\n    );\r\n  }\r\n}    ","import React from \"react\";\r\nimport loginImg from \"../../LOGIN.svg\";\r\nimport { Button, Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Row, Col } from \"reactstrap\";\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport 'sweetalert2/src/sweetalert2.scss';\r\nimport { CrearPersona } from './crearPersona';\r\n\r\n\r\nexport class Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      usuario: '',\r\n      contraseña: '',\r\n      tipousuario: '',\r\n      tipousuario2: '',\r\n      idusu: [],\r\n      codi: '',\r\n      codigo: '4dm1n',\r\n      personas: [],\r\n      usuexi: false,\r\n      yaregis: false,\r\n      idperso: ''\r\n\r\n\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n\r\n\r\n  async componentDidMount() {\r\n\r\n    await fetch('http://localhost:5000/persona/')\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            personas: result\r\n          });\r\n        }\r\n      )\r\n\r\n  }\r\n\r\n\r\n  async validainfo() {\r\n\r\n    await fetch(`http://localhost:5000/usuario/${this.state.usuario}`)\r\n      .then(response => response.json())\r\n      .then(usua => {\r\n        if (usua.length === 0) {\r\n          this.setState({\r\n            usuexi: false\r\n          });\r\n        } else {\r\n          this.setState({\r\n            usuexi: true\r\n          });\r\n        }\r\n      });\r\n\r\n    var index = document.getElementById('personas').selectedIndex - 1;\r\n\r\n    if (index >= 0) {\r\n      var idpersona = this.state.personas[index].idpersona\r\n      await fetch(`http://localhost:5000/usuario2/${idpersona}`)\r\n        .then(response => response.json())\r\n        .then(usua => {\r\n          if (usua.length === 0) {\r\n            this.setState({\r\n              yaregis: false\r\n            });\r\n          } else {\r\n            this.setState({\r\n              yaregis: true\r\n            });\r\n          }\r\n        });\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  async recargar(){\r\n    await fetch('http://localhost:5000/persona/')\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            personas: result\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  async crearUsuario() {\r\n\r\n    this.validainfo();\r\n    if (window.confirm(`Desea agregar el Usuario:  ${this.state.usuario}`)) {\r\n      try {\r\n        var index = document.getElementById('personas').selectedIndex - 1;\r\n        var tip = document.getElementById('tipousu').selectedIndex - 1;\r\n        if (tip >= 0) {\r\n          if (index >= 0) {\r\n            if (!this.state.usuexi) {\r\n              if (!this.state.yaregis) {\r\n                var nickname = this.state.usuario;\r\n                var contra = this.state.contraseña;\r\n                var idpersona = document.getElementById('personas').value;\r\n                var tipo_usu = document.getElementById('tipousu').value\r\n\r\n                const body = { nickname, contra, idpersona, tipo_usu };\r\n                console.log(body);\r\n                await fetch('http://localhost:5000/usuario',\r\n                  {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(body)\r\n                  });\r\n                Swal.fire({\r\n                  icon: 'success',\r\n                  title: `Se ha agregado el Usuario con NickName ${this.state.usuario}`,\r\n                  showConfirmButton: false,\r\n                  timer: 1500\r\n                })\r\n                window.location.reload();\r\n              } else {\r\n                Swal.fire({\r\n                  icon: 'error',\r\n                  title: 'Oops...',\r\n                  text: 'Ya existe un Usuario asociado a esta Persona.',\r\n                })\r\n              }\r\n            } else {\r\n\r\n              Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Ya existe un Usuario con este Nickname por favor seleccione otro.',\r\n              })\r\n            }\r\n          } else {\r\n            Swal.fire(\r\n              'Debe seleccionar una Persona para Registrar',\r\n              'O Ingresar una nueva Persona',\r\n              'warning'\r\n            )\r\n          }\r\n\r\n        } else {\r\n          Swal.fire(\r\n            'Debe seleccionar un Tipo de Usuario',\r\n            'Para Realizar el Registro',\r\n            'warning'\r\n          )\r\n        }\r\n      } catch (err) {\r\n        console.error(err.message);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  mostrarForm() {\r\n    if (this.state.codi === this.state.codigo) {\r\n      document.getElementById('envioR').style.display = 'contents';\r\n      document.getElementById('mevoy').style.display = 'none';\r\n      document.getElementById('codigo').style.display = 'none';\r\n      document.getElementById('en').style.display = 'none';\r\n\r\n    } else {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'El Codigo de Admin no es Correcto'\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"base-container \" ref={this.props.containerRef}>\r\n        <div className=\"header mb-1 mt-4\" type=\"button\" id=\"register\"><h2 className=\"m-2\" >Registro</h2></div>\r\n        <div className=\"content \"  >\r\n          <div className=\"image\">\r\n            <img src={loginImg} />\r\n          </div>\r\n\r\n          <div id='epa' >\r\n            <Form id='en'  >\r\n              <div className=\"mb-1\">\r\n                <FormGroup  >\r\n\r\n                  <Input id=\"codigo\"\r\n                    placeholder=\"Codigo\"\r\n                    className=\"form-control\"\r\n                    name=\"codi\"\r\n                    type=\"text\"\r\n                    bsSize=\"sm\"\r\n                    value={this.state.codi}\r\n                    onChange={this.handleChange} />\r\n                </FormGroup></div>\r\n              <Button id='mevoy' onClick={() => this.mostrarForm()}>Verificar <i class=\"fa fa-lock\" aria-hidden=\"true\"></i></Button></Form>\r\n\r\n\r\n            <Form id='envioR'  >\r\n              <div id=\"regis\" className=\"contRegis\">\r\n                <div className=\"mb-1\">\r\n                  <FormGroup  >\r\n                    <InputGroup>\r\n                      <InputGroupText><i class=\"fa fa-user\"></i></InputGroupText>\r\n                      <Input id=\"usuario\"\r\n                        placeholder=\"Usuario\"\r\n                        className=\"form-control\"\r\n                        name=\"usuario\"\r\n                        type=\"text\"\r\n                        bsSize=\"md\"\r\n                        value={this.state.usuario}\r\n                        onChange={this.handleChange} /></InputGroup>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"mb-1\" >\r\n                  <FormGroup  >\r\n                    <InputGroup>\r\n                      <InputGroupText><i class=\"fa fa-lock\"></i></InputGroupText>\r\n                      <Input\r\n                        id=\"contraseña\"\r\n                        placeholder=\"Contraseña\"\r\n                        className=\"form-control\"\r\n                        name=\"contraseña\"\r\n                        type=\"password\"\r\n                        bsSize=\"md\"\r\n                        value={this.state.contraseña}\r\n                        onChange={this.handleChange}\r\n                      /></InputGroup> </FormGroup>\r\n                </div>\r\n                <div className=\"mb-1\">\r\n                  <FormGroup  >\r\n                    <Input id=\"tipousu\"\r\n\r\n                      className=\"form-control\"\r\n                      name=\"tipousu\"\r\n                      type=\"select\"\r\n                      bsSize=\"md\"\r\n                      selectedIndex={this.state.tipousuario}\r\n                      onChange={this.handleChange} >\r\n                      <option selected=\"true\" disabled=\"disabled\">Tipo de Usuario</option>\r\n                      <option value=\"super\">Admin</option>\r\n                      <option value=\"doctor\">Doctor</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"mb-1\">\r\n                  <FormGroup  >\r\n                    <InputGroup>\r\n                      <Input id=\"personas\"\r\n\r\n                        className=\"form-control\"\r\n                        name=\"personas\"\r\n                        type=\"select\"\r\n                        bsSize=\"md\"\r\n                        selectedIndex={this.state.idperso} >\r\n                        <option selected=\"true\" disabled=\"disabled\">Personas</option>\r\n                        {this.state.personas.map(per => (\r\n                          <option value={per.idpersona}>\r\n                            {per.nombre} {per.apellido} - {per.numerodoc}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      <InputGroupAddon addonType=\"prepend\" className=''>\r\n                        <Button color=\"primary\" onClick={() => this.recargar()} ><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></Button>\r\n\r\n                      </InputGroupAddon>\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <div className=\"footer\">\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Col >\r\n                    <Button size=\"lg\" color='primary' onClick={() => this.crearUsuario()} >\r\n                      Registro <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                    </Button>\r\n                  </Col>\r\n\r\n                  <Col>\r\n                    <CrearPersona />\r\n                  </Col>\r\n                </Row>\r\n\r\n              </div>\r\n            </Form>\r\n\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport \"../App.scss\";\r\nimport { Login, Register } from \"./Login/index\";\r\n\r\n\r\nclass LoginAdmin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLogginActive: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Add .right by default\r\n    this.rightSide.classList.add(\"right\");\r\n  }\r\n\r\n  changeState() {\r\n    const { isLogginActive } = this.state;\r\n\r\n    if (isLogginActive) {\r\n      this.rightSide.classList.remove(\"right\");\r\n      this.rightSide.classList.add(\"left\");\r\n    } else {\r\n      this.rightSide.classList.remove(\"left\");\r\n      this.rightSide.classList.add(\"right\");\r\n    }\r\n    this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\r\n  }\r\n\r\n  render() {\r\n    const { isLogginActive } = this.state;\r\n    const current = isLogginActive ? \"Register\" : \"Login\";\r\n    const currentActive = isLogginActive ? \"login\" : \"register\";\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"login\">\r\n          <div className=\"container\" ref={ref => (this.container = ref)}>\r\n            {isLogginActive && (\r\n              <Login containerRef={ref => (this.current = ref)} />\r\n            )}\r\n            {!isLogginActive && (\r\n              <Register containerRef={ref => (this.current = ref)} />\r\n            )}\r\n          </div>\r\n          <RightSide\r\n            current={current}\r\n            currentActive={currentActive}\r\n            containerRef={ref => (this.rightSide = ref)}\r\n            onClick={this.changeState.bind(this)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst RightSide = props => {\r\n  return (\r\n    <div\r\n      className=\"right-side\"\r\n      ref={props.containerRef}\r\n      onClick={props.onClick}\r\n    >\r\n      <div className=\"inner-container\">\r\n        <div className=\"text\">{props.current}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginAdmin;","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport LoginAdmin from \"./Componentes/LoginAdmin.js\"\r\nimport \"./Componentes/Login/syle.scss\";\r\n\r\n\r\n\r\n\r\nclass LoginPrin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tipoLogin: true\r\n        };\r\n    }\r\n\r\n    state = {\r\n        tipoLogin: true\r\n    }\r\n\r\n    render() {\r\n\r\n            return (\r\n\r\n               \r\n\r\n                    <div className=\"contenedor\" >\r\n                        <LoginAdmin />\r\n                    </div>\r\n\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\nexport default LoginPrin;","import React from 'react';\r\nimport { Button, Modal, ModalBody, FormGroup, InputGroup, Input, InputGroupAddon, Table, Collapse, Card, CardBody, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport './InterfazDoc/style.scss';\r\nimport { PieChart, Pie, Tooltip, ResponsiveContainer, Cell, Sector, AreaChart, Area, XAxis, YAxis, CartesianGrid } from \"recharts\";\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport 'sweetalert2/src/sweetalert2.scss';\r\n\r\nconst renderActiveShape = (props) => {\r\n  const RADIAN = Math.PI / 180;\r\n  const {\r\n    cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\r\n    fill, payload, percent, value,\r\n  } = props;\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (outerRadius + 10) * cos;\r\n  const sy = cy + (outerRadius + 10) * sin;\r\n  const mx = cx + (outerRadius + 30) * cos;\r\n  const my = cy + (outerRadius + 30) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? 'start' : 'end';\r\n\r\n  return (\r\n    <g>\r\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" className=\"font-weight-bold\" font-size='23' fill=\"black\"> {payload.name}</text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={fill}\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius + 6}\r\n        outerRadius={outerRadius + 10}\r\n        fill={fill}\r\n      />\r\n      <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\" className=\"font-weight-bold\">{`Contagiados: ${value}`}</text>\r\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#555\" className=\"font-weight-bold\">\r\n        {`(Promedio: ${(percent * 100).toFixed(2)}%)`}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\n\r\nexport default class Informes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeIndex: 0,\r\n      barrios: [],\r\n      data01: [],\r\n      color: null,\r\n      color2: [],\r\n      edades: [],\r\n      modalInser: true,\r\n      visitas: [],\r\n      visi: null,\r\n      fechavisi: null,\r\n      modal: false,\r\n      obs: '',\r\n      telEmer: [],\r\n      emailEmer:[],\r\n      modalEmail: false,\r\n      modalTel: false,\r\n      //informe urgencias\r\n      urginf: [],\r\n      pacientes: [],\r\n      paciente: null\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  toggle(y) {\r\n    /*\r\n    const x = document.getElementById(y).style.display\r\n    if (x === 'none') {\r\n      document.getElementById(y).style.display = 'contents'\r\n    }\r\n    else {\r\n      document.getElementById(y).style.display = 'none'\r\n    }*/\r\n    const observacion = y;\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      obs: observacion\r\n    })\r\n  }\r\n\r\n  cerrarM() {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      obs: '',\r\n    })\r\n  }\r\n\r\n  colorRamdo() {\r\n    var randomColor = Math.floor(Math.random() * 16777215).toString(16);\r\n    randomColor = \"#\" + (\"000000\" + randomColor).slice(-6);\r\n    return randomColor;\r\n  }\r\n\r\n\r\n\r\n  color() {\r\n    var color = Math.floor(Math.random() * 16777215).toString(16);\r\n    color = \"#\" + (\"000000\" + color).slice(-6);\r\n    color = `\"background-color: ${color};\"`;\r\n    console.log(color);\r\n    return color;\r\n  }\r\n\r\n\r\n\r\n  async seleccionarPaciente() {\r\n\r\n    if (document.getElementById('paciente').selectedIndex != 0) {\r\n      const index = document.getElementById('paciente').selectedIndex - 1;\r\n      var idpac = this.state.pacientes[index].idpaciente;\r\n\r\n      await fetch(`http://localhost:5000/infurg/${idpac}/`)\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            console.log(result)\r\n            this.setState({\r\n              urginf: result\r\n            });\r\n          }\r\n        )\r\n\r\n    } else {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        titele: 'Oops...',\r\n        text: 'Seleccione un Paciente.',\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  async visitas() {\r\n    var fecha = this.state.fechavisi;\r\n    var visita = this.state.visi;\r\n\r\n    if (fecha !== null) {\r\n      var anio = fecha.substr(0, 4);\r\n      var mes = fecha.substr(5, 2);\r\n      var dia = fecha.substr(8, 2);\r\n\r\n      if (visita === '1') {\r\n\r\n        await fetch(`http://localhost:5000/visxanio/${anio}/`)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              \r\n              this.setState({\r\n                visitas: result\r\n              });\r\n            }\r\n          )\r\n\r\n      } else if (visita === '2') {\r\n\r\n        await fetch(`http://localhost:5000/visxmes/${anio}/${mes}/`)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                visitas: result\r\n              });\r\n            }\r\n          )\r\n      } else if (visita === '3') {\r\n\r\n        await fetch(`http://localhost:5000/visxdia/${anio}/${mes}/${dia}/`)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                visitas: result\r\n              });\r\n            }\r\n          )\r\n      } else {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: 'Seleccione una opcion de busqueda',\r\n        })\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Seleccione una fecha',\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await fetch('http://localhost:5000/pacientes/')\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            pacientes: result\r\n          });\r\n        }\r\n      )\r\n\r\n    await fetch(`http://localhost:5000/contxbarrio/`)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            barrios: result\r\n          });\r\n        }\r\n      )\r\n\r\n    await fetch(`http://localhost:5000/pacxed/`)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            edades: result\r\n          });\r\n        }\r\n      )\r\n\r\n\r\n    for (var i = 0; i < this.state.barrios.length; i++) {\r\n\r\n      const barrio = {\r\n        name: `${this.state.barrios[i].nombre}`,\r\n        value: parseInt(this.state.barrios[i].count)\r\n      }\r\n      this.setState({\r\n        data01: [...this.state.data01, barrio]\r\n      }\r\n      )\r\n      this.setState({\r\n        color2: [...this.state.color2, this.colorRamdo()]\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      color: this.colorRamdo()\r\n    })\r\n\r\n    console.log(this.state.color2)\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  async telEmer(idper) {\r\n\r\n    await fetch(`http://localhost:5000/telefono/${idper}`)\r\n        .then(response => response.json())\r\n        .then((result) => {\r\n            this.setState({\r\n                telEmer: result,\r\n                \r\n            })\r\n        });\r\n    this.modalTel();\r\n}\r\n\r\nasync emailEmer(idper) {\r\n\r\n  const idPer = parseInt(idper);\r\n\r\n\r\n  await fetch(`http://localhost:5000/email/${idPer}`)\r\n      .then(response => response.json())\r\n      .then((result) => {\r\n          this.setState({\r\n              emailEmer: result,\r\n             \r\n          })\r\n\r\n      });\r\n\r\n  this.modalEmail();\r\n\r\n}\r\n\r\nmodalTel() {\r\n  this.setState({\r\n      modalTel: !this.state.modalTel\r\n  });\r\n}\r\nmodalEmail() {\r\n  this.setState({\r\n      modalEmail: !this.state.modalEmail\r\n  });\r\n}\r\n\r\ncancelarTel() {\r\n  this.modalTel();\r\n  this.setState({\r\n      telEmer: [],\r\n  });\r\n}\r\ncancelarEmail() {\r\n  this.modalEmail();\r\n  this.setState({\r\n      emailEmer: [],\r\n  });\r\n}\r\n\r\n  onPieEnter = (data, index) => {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  };\r\n\r\n  mostrarCPB() {\r\n    document.getElementById('edades').style.display = 'none';\r\n    document.getElementById('visitas').style.display = 'none';\r\n    document.getElementById('pie').style.display = 'inline-block';\r\n    document.getElementById('urgencias').style.display = 'none';\r\n\r\n  }\r\n  mostrarED() {\r\n    document.getElementById('pie').style.display = 'none';\r\n    document.getElementById('visitas').style.display = 'none';\r\n    document.getElementById('edades').style.display = 'inline-block';\r\n    document.getElementById('urgencias').style.display = 'none';\r\n\r\n  }\r\n  mostrarVI() {\r\n    document.getElementById('pie').style.display = 'none';\r\n    document.getElementById('edades').style.display = 'none';\r\n    document.getElementById('visitas').style.display = 'inline-block';\r\n    document.getElementById('urgencias').style.display = 'none';\r\n  }\r\n  mostrarUR() {\r\n    document.getElementById('pie').style.display = 'none';\r\n    document.getElementById('edades').style.display = 'none';\r\n    document.getElementById('visitas').style.display = 'none';\r\n    document.getElementById('urgencias').style.display = 'inline-block';\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"total\">\r\n\r\n        <div className=\"header mt-2 text-center \" id=\"login\"><h2 className=\"Titulo m-2 \" >Informes</h2></div>\r\n\r\n        <div className=\"conteneTI mt-2 text-center\">\r\n          <div className=\"btn-group-lg  pt-3 \" role=\"group\" aria-label=\"Basic example\">\r\n            <Button type=\"button\" onClick={() => this.mostrarCPB()} className='mr-1 font-weight-bold' color=\"primary\">Contagios por Barrio</Button>\r\n            <Button type=\"button\" onClick={() => this.mostrarED()} className='mr-1 font-weight-bold' color=\"primary\">Contagios por edad</Button>\r\n            <Button type=\"button\" onClick={() => this.mostrarVI()} className='font-weight-bold' color=\"primary\">Visitas Doctores</Button>\r\n            <Button type=\"button\" onClick={() => this.mostrarUR()} className='ml-1 font-weight-bold' color=\"primary\">Urgencias</Button>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n          <div className='pie' id='pie'>\r\n            <h4 className=\"text-center mb-2 mt-2 font-weight-bold\" >Contagiados por Barrio</h4>\r\n\r\n            <PieChart width={900} height={800} className=\"pr-2\">\r\n\r\n              <Pie\r\n                activeIndex={this.state.activeIndex}\r\n                activeShape={renderActiveShape}\r\n                data={this.state.data01}\r\n                cx='50%'\r\n                cy='35%'\r\n                innerRadius={160}\r\n                outerRadius={220}\r\n                fill={this.colorRamdo()}\r\n                dataKey=\"value\" nameKey=\"name\"\r\n                onMouseEnter={this.onPieEnter}\r\n              >\r\n                {\r\n                  this.state.data01.map((entry, index) => <Cell key={`cell-${index}`} fill={this.state.color2[index]} />)\r\n                }\r\n              </Pie>\r\n\r\n            </PieChart>\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n          <div style={{ display: 'none' }} id='edades'>\r\n            <h4 className=\"text-center mb-5 mt-2 font-weight-bold\" >Contagiados por Edad</h4>\r\n            <AreaChart\r\n              width={800}\r\n              height={450}\r\n              data={this.state.edades}\r\n              margin={{\r\n                top: 10, right: 30, left: 0, bottom: 0,\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"anio\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Area type=\"monotone\" dataKey=\"personas\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n            </AreaChart>\r\n          </div>\r\n\r\n          <div style={{ display: 'none' }} id='visitas'>\r\n            <h4 className=\"text-center mb-5 mt-2 font-weight-bold\" >Informes de Visitas</h4>\r\n            <FormGroup >\r\n              <div className='row justify-content-md-center'>\r\n\r\n\r\n                <InputGroup className='col-7' style={{ width: '50%' }}>\r\n                  <Input id=\"visi\"\r\n                    className=\"form-control\"\r\n                    name=\"visi\"\r\n                    type=\"select\"\r\n                    bsSize=\"md\"\r\n                    value={this.state.visi}\r\n                    onChange={this.handleChange}>\r\n\r\n                    <option selected=\"true\" disabled=\"disabled\">Tipo de Busqueda</option>\r\n                    <option value='1'>Por Año</option>\r\n                    <option value='2'>Por Mes</option>\r\n                    <option value='3'>Por Dia</option>\r\n\r\n                  </Input>\r\n                  <Input id=\"fechavisi\"\r\n                    className=\"form-control\"\r\n                    name=\"fechavisi\"\r\n                    type=\"date\"\r\n                    bsSize=\"md\"\r\n                    value={this.state.fechavisi}\r\n                    onChange={this.handleChange}>\r\n\r\n\r\n                  </Input>\r\n\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n\r\n                    <Button color=\"primary\" onClick={() => this.visitas()}><i className=\"fa fa-search\" aria-hidden=\"true\"></i></Button>\r\n\r\n                  </InputGroupAddon>\r\n                </InputGroup>\r\n              </div>\r\n            </FormGroup>\r\n            <Table className=' text-center' striped bordered hover>\r\n              <thead>\r\n                <tr id='tr-info'>\r\n                  <th className='font-weight-bold'>Paciente</th>\r\n                  <th className='font-weight-bold'>Doctor</th>\r\n                  <th className='font-weight-bold'>Medicamento</th>\r\n                  <th className='font-weight-bold'>Temperatura</th>\r\n                  <th className='font-weight-bold'>Fecha</th>\r\n                  <th className='font-weight-bold'>Hora</th>\r\n                  <th className='font-weight-bold'>Observaciones</th>\r\n\r\n\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.visitas.map((vis, index) => (\r\n                  <tr className='font-weight-bold'>\r\n                    <td>{vis.nombrepac}{' '}{vis.apellidopac}</td>\r\n                    <td>{vis.nombredoc}{' '}{vis.apellidodoc}</td>\r\n                    <td>{vis.medicamento}</td>\r\n                    <td>{vis.temperatura}</td>\r\n                    <td>{vis.to_char}</td>\r\n                    <td>{vis.hora}</td>\r\n                    <td> <Button onClick={() => this.toggle(vis.observaciones)} type=\"button\">\r\n                      <i className=\"fa fa-commenting\" aria-hidden=\"true\"></i>\r\n                    </Button>\r\n\r\n                    </td>\r\n\r\n\r\n                  </tr>\r\n                ))}\r\n\r\n\r\n\r\n              </tbody>\r\n            </Table>\r\n\r\n            <Modal centered isOpen={this.state.modal} >\r\n              <ModalHeader >\r\n                Observaciones\r\n              </ModalHeader>\r\n              <ModalBody className='text-center text-justify'>\r\n                {this.state.obs}\r\n              </ModalBody>\r\n\r\n              <ModalFooter>\r\n                <Button onClick={() => this.cerrarM()} color='danger' type=\"button\">Cerrar</Button>\r\n\r\n              </ModalFooter>\r\n\r\n            </Modal>\r\n          </div>\r\n          <div style={{ display: 'none' }} id='urgencias'>\r\n            <h4 className=\"text-center mb-5 mt-2 font-weight-bold\" >Contactos en caso de Urgencia</h4>\r\n            <FormGroup className=\"ml-3 mr-3 mt-2\" >\r\n              <InputGroup>\r\n              <Input className=\"mt-4\" id='paciente'\r\n\r\n                className=\"form-control\"\r\n                name=\"paciente\"\r\n                type=\"select\"\r\n                bsSize=\"md\"\r\n                value={this.state.paciente}\r\n                onChange={this.handleChange}>\r\n                <option selected=\"true\" disabled=\"disabled\">Pacientes</option>\r\n                {this.state.pacientes.map(pac => (\r\n                  <option value={pac.idpaciente}>\r\n                    {pac.nombre} {pac.apellido} - {pac.numerodoc}\r\n                  </option>\r\n                ))}\r\n\r\n              </Input>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n\r\n                    <Button color=\"primary\" onClick={() => this.seleccionarPaciente()}><i className=\"fa fa-search\" aria-hidden=\"true\"></i></Button>\r\n\r\n              </InputGroupAddon>\r\n              </InputGroup>\r\n            </FormGroup>\r\n            <Table className=' text-center' striped bordered hover>\r\n              <thead>\r\n                <tr id='tr-info'>\r\n                  <th className='font-weight-bold'>Nombre</th>\r\n                  <th className='font-weight-bold'>Relacion</th>\r\n                  <th className='font-weight-bold'>Id Paciente</th>\r\n                  <th className='font-weight-bold'>Nombre Paciente</th>\r\n                  <th className='font-weight-bold'>Telefonos</th>\r\n                  <th className='font-weight-bold'>Correos</th>              \r\n\r\n\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.urginf.map((urg, index) => (\r\n                  <tr className='font-weight-bold'>\r\n                    <td>{urg.nomburg}{' '}{urg.apeurg}</td>\r\n                    <td>{urg.relacion}</td>\r\n                    <td>{urg.idpaciente}</td>\r\n                    <td>{urg.nompa}{' '}{urg.apepa}</td>\r\n                    <td> <Button color=\"primary\" onClick={() => this.telEmer(urg.idpersona)} type=\"button\">\r\n                    <i class=\"fa fa-volume-control-phone\"  aria-hidden=\"true\"></i>\r\n                    </Button>\r\n\r\n                    </td>\r\n                    <td> <Button  color=\"success\" onClick={() => this.emailEmer(urg.idpersona)} type=\"button\">\r\n                    <i class=\"fa fa-envelope\"  aria-hidden=\"true\"></i>\r\n                    </Button>\r\n\r\n                    </td>\r\n\r\n\r\n                  </tr>\r\n                ))}\r\n\r\n\r\n\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n\r\n          {/* Modal Email */}\r\n\r\n          <Modal\r\n                    size=\"md\"\r\n                    centered isOpen={this.state.modalEmail} id=\"insertar\">\r\n                    <ModalHeader>\r\n                        <div><h3>Datos de Emergencia Emails</h3></div>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                       \r\n                        <Table className=' text-center' striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='font-weight-bold'>Id</th>\r\n                                    <th className='font-weight-bold'>Email</th>\r\n                                 \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.emailEmer.map((ema, index) => (\r\n                                    <tr>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{ema.email}</td>\r\n                                        \r\n                                    </tr>\r\n                                ))}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                    </ModalBody>\r\n                    <ModalFooter >\r\n                    \r\n                        <Button color=\"danger\" onClick={() => this.cancelarEmail()} >Cerrar</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n\r\n                {/* Modal Tel */}\r\n\r\n                <Modal\r\n                    size=\"md\"\r\n                    centered isOpen={this.state.modalTel} id=\"insertar\">\r\n                    <ModalHeader>\r\n                        <div><h3>Datos de Emergencia Telefonos</h3></div>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                       \r\n                        <Table className=' text-center' striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='font-weight-bold'>Id</th>\r\n                                    <th className='font-weight-bold'>Telefono</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.telEmer.map((tel, index) => (\r\n                                    <tr>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{tel.telefono}</td>\r\n                                    </tr>\r\n                                ))}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                    </ModalBody>\r\n                    <ModalFooter >\r\n                        <Button color=\"danger\" onClick={() => this.cancelarTel()} >Cerrar</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport Informes from '../Informes';\r\n\r\n\r\nexport default class InformesDoc extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    \r\n                </div>\r\n                <div>\r\n                    <Informes />\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Marker, Popup, Tooltip } from 'react-leaflet'\r\n\r\n\r\n\r\n\r\n\r\nconst Markers = (props) => {\r\n    const { places } = props\r\n    \r\n    const markers = places.map((place, i) => (\r\n        \r\n        <Marker key={i} position={{lng: place.longitud, lat: place.latitud}}>\r\n           <Tooltip >\r\n                {place.nombrevia}{place.numeroviap} # {place.numerovias}  - {place.numerocasa}\r\n            </Tooltip>\r\n            <Popup>\r\n                {place.nombre}{' '}{place.apellido}\r\n            </Popup>\r\n        </Marker>\r\n    ))\r\n    return (markers);\r\n    \r\n}\r\n\r\nexport default Markers;","import React from 'react';\r\nimport '../InterfazDoc/style.scss';\r\nimport {Map,TileLayer} from 'react-leaflet';\r\nimport Markers from './Markers.js'\r\n\r\n\r\n\r\nexport default class Mapa extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            geoloc: []\r\n        }; \r\n               \r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        await fetch(`http://localhost:5000/geolocalizacion/`)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                geoloc: result         \r\n              });\r\n            }            \r\n          )\r\n    }\r\n    \r\n     \r\n      \r\n    render() {\r\n        return (\r\n            <div className=\"total\">\r\n                \r\n                <div className=\"header mt-2 text-center \" id=\"login\"><h2 className=\"Titulo m-2 \" >Mapa</h2></div>\r\n                   \r\n                <div className=\"conteneT mt-2\">\r\n                    <div className=\"conteMap\">\r\n                    <Map center={{lat: '3.42158',lng: '-76.5205'}} zoom={13}>\r\n                        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'/>\r\n\r\n                        <Markers places={this.state.geoloc}/>\r\n                    </Map>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        );\r\n    }\r\n    \r\n}\r\n","import React from 'react';\r\nimport Mapa from '../Mapa/Mapa';\r\n\r\n\r\nexport default class MapaDoctor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    \r\n                </div>\r\n                <div>\r\n                    <Mapa />\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Form, Input, FormGroup, Button, Label, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup } from 'reactstrap';\r\nimport './style.scss';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport 'sweetalert2/src/sweetalert2.scss';\r\n\r\n\r\n\r\nexport default class Registro extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalInser: false,\r\n      medicamentos: [],\r\n      pacientes: [],\r\n      paciente: null,\r\n\r\n      //Form Paciente\r\n      nombreP: '',\r\n      direccionP: '',\r\n      edadP: '',\r\n\r\n      //Info Modal Visita\r\n      fechaV: null,\r\n      horaV: null,\r\n      temperatura: '',\r\n      peso: null,\r\n      presionA: '',\r\n      medicamento: null,\r\n      dosis: '',\r\n      obs: '',\r\n      idDoc: props.idDoc,\r\n\r\n\r\n\r\n\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n\r\n\r\n  mostarInser() {\r\n    this.setState({\r\n      modalInser: !this.state.modalInser\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await fetch('http://localhost:5000/medicamentos/')\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            medicamentos: result\r\n          });\r\n        }\r\n      )\r\n\r\n    await fetch('http://localhost:5000/pacientes/')\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            pacientes: result\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  seleccionarPaciente() {\r\n\r\n    if (document.getElementById('paciente').selectedIndex != 0) {\r\n      var nombre = null;\r\n      var año = null;\r\n      var mes = null;\r\n      var dia = null;\r\n      var direccion = '';\r\n      var hoy = new Date();\r\n      var añoAc = hoy.getFullYear();\r\n      var mesAc = (hoy.getMonth() + 1);\r\n      var diaAc = hoy.getDate();\r\n      const index = document.getElementById('paciente').selectedIndex - 1;\r\n\r\n      nombre = this.state.pacientes[index].nombre + ' ' + this.state.pacientes[index].apellido;\r\n      direccion = this.state.pacientes[index].nombrevia + ' ' + this.state.pacientes[index].numeroviap + ' # ' +\r\n        this.state.pacientes[index].numerovias + ' - ' + this.state.pacientes[index].numerocasa;\r\n      dia = parseInt(this.state.pacientes[index].fechanaci.substr(8, 2));\r\n      mes = parseInt(this.state.pacientes[index].fechanaci.substr(5, 2));\r\n      año = añoAc - this.state.pacientes[index].fechanaci.substr(0, 4);\r\n\r\n\r\n      if (mesAc > mes) {\r\n        año += -1;\r\n      }\r\n      else if (mesAc === mes) {\r\n        if (diaAc < dia) {\r\n          año += -1;\r\n        }\r\n      }\r\n\r\n\r\n      if (año < 0) {\r\n        año = 0;\r\n      }\r\n\r\n      this.setState({\r\n        nombreP: nombre,\r\n        direccionP: direccion,\r\n        edadP: año\r\n      });\r\n\r\n      document.getElementById('formOcul').style.visibility = 'visible';\r\n\r\n    } else {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Seleccione un Paciente.',\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  terminarVisita() {\r\n    document.getElementById('formOcul').style.visibility = 'hidden';\r\n\r\n    this.setState({\r\n      nombreP: '',\r\n      direccionP: '',\r\n      edadP: ''\r\n    })\r\n  }\r\n\r\n  //Crear Visita\r\n\r\n  async crearVisita() {\r\n\r\n    var fecha = this.state.fechaV;\r\n    var hora = this.state.horaV;\r\n    var temp = this.state.temperatura;\r\n    var peso = this.state.peso;\r\n    var presion = this.state.presionA;\r\n    var medi = this.state.medicamento;\r\n    var dosis = this.state.dosis;\r\n    var obs = this.state.obs;\r\n    var idDoc = this.props.idDoc;\r\n    var idPac = this.state.paciente;\r\n\r\n    const body = { idDoc, idPac, fecha, hora, temp, peso, presion, medi, dosis, obs }\r\n\r\n    await fetch(`http://localhost:5000/visita/`,\r\n            {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n            });\r\n\r\n    await Swal.fire({\r\n      icon: 'success',\r\n      title: `Se ha agregado la Visita al Paciente ${this.state.nombreP}`,\r\n      showConfirmButton: false,\r\n      timer: 2000\r\n    });\r\n\r\n    this.cancelar();\r\n  }\r\n\r\n\r\n\r\n  validacion() {\r\n    const fecha = document.getElementById('fechaV').value;\r\n    const hora = document.getElementById('horaV').value;\r\n    const temp = document.getElementById('temperatura').value.trim();\r\n    const peso = document.getElementById('peso').value;\r\n    const pres = document.getElementById('presionA').value.trim();\r\n    const medica = document.getElementById('medicamento').selectedIndex;\r\n    const dosis = document.getElementById('dosis').value.trim();\r\n    const obs = document.getElementById('obs').value.trim();\r\n\r\n    var ft = new Date(fecha)\r\n    ft.setDate(ft.getDate() + 1);\r\n\r\n    if (ft <= new Date()) {\r\n      document.getElementById('sfechaV').style.display = 'none';\r\n      if (hora !== '') {\r\n        document.getElementById('shoraV').style.display = 'none';\r\n        if (temp !== '') {\r\n          document.getElementById('stemperatura').style.display = 'none';\r\n          if (peso !== '') {\r\n            document.getElementById('speso').style.display = 'none';\r\n            if (pres !== '') {\r\n              document.getElementById('spresionA').style.display = 'none';\r\n              if (medica !== 0) {\r\n                document.getElementById('smedicamento').style.display = 'none';\r\n                if (dosis !== '') {\r\n                  document.getElementById('sdosis').style.display = 'none';\r\n                  if (obs !== '') {\r\n                    document.getElementById('sobs').style.display = 'none';\r\n                    this.crearVisita();\r\n                  } else {\r\n                    document.getElementById('sobs').style.display = 'contents';\r\n                  }\r\n                } else {\r\n                  document.getElementById('sdosis').style.display = 'contents';\r\n                }\r\n              } else {\r\n                document.getElementById('smedicamento').style.display = 'contents';\r\n              }\r\n            } else {\r\n              document.getElementById('spresionA').style.display = 'contents';\r\n            }\r\n          } else {\r\n            document.getElementById('speso').style.display = 'contents';\r\n          }\r\n        } else {\r\n          document.getElementById('stemperatura').style.display = 'contents';\r\n        }\r\n      } else {\r\n        document.getElementById('shoraV').style.display = 'contents';\r\n      }\r\n    } else {\r\n      document.getElementById('sfechaV').style.display = 'contents';\r\n    }\r\n\r\n  }\r\n\r\n  cancelar() {\r\n\r\n    this.mostarInser();\r\n\r\n    this.setState({\r\n      fechaV: null,\r\n      horaV: null,\r\n      temperatura: '',\r\n      peso: null,\r\n      presionA: '',\r\n      medicamento: null,\r\n      dosis: '',\r\n      obs: '',\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"total\">\r\n        <div className=\"header mt-2 text-center \" id=\"login\"><h2 className=\"Titulo m-2 \" >Registrar Visita</h2></div>\r\n        <div className=\"conteneT mt-2\">\r\n          <div className=\"contene ml-5\">\r\n            <div className=\"mt-3\" >\r\n              <Form className=\"contenido mt-2\" >\r\n\r\n                <div className=\"form mt-3  \"  >\r\n\r\n                  <Label className=\"mt-3 font-weight-bold\">Registrar Visita del Paciente :</Label>\r\n\r\n                  <FormGroup className=\"ml-3 mr-3 mt-2\" >\r\n                    <Input className=\"mt-4\" id=\"paciente\"\r\n\r\n                      className=\"form-control\"\r\n                      name=\"paciente\"\r\n                      type=\"select\"\r\n                      bsSize=\"md\" \r\n                      value={this.state.paciente}\r\n                      onChange={this.handleChange}>\r\n                      <option selected=\"true\" disabled=\"disabled\">Pacientes</option>\r\n                      {this.state.pacientes.map(pac => (\r\n                        <option value={pac.idpaciente}>\r\n                          {pac.nombre} {pac.apellido} - {pac.numerodoc}\r\n                        </option>\r\n                      ))}\r\n\r\n                    </Input>\r\n                  </FormGroup>\r\n\r\n                  <div className=\"footer mb-1\">\r\n                    <Button className=\"mb-3\" size=\"lg\" color='primary' onClick={() => this.seleccionarPaciente()} >\r\n                      Registrar Visita\r\n                                        </Button>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n              </Form>\r\n            </div>\r\n\r\n            <div className=\"formD mt-3 \">\r\n              <Label className=\"ml-3 mr-3 mt-3 font-weight-bold\">Informacion Doctor</Label>\r\n              <FormGroup className=\"inputF ml-3 mr-3 mt-3\">\r\n                <Label className=\"font-weight-bold\"> Id Doctor: </Label>\r\n                <Input id=\"identificacion\"\r\n\r\n                  className=\"form-control text-center\"\r\n                  name=\"identificacion\"\r\n                  type=\"text\"\r\n                  value={this.props.tipodD + ' :    ' + this.props.numerdD}\r\n                  bsSize=\"md\" readOnly>\r\n\r\n\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup className=\"inputF ml-3 mr-3 mt-3 mt-3\" >\r\n                <Label className=\"font-weight-bold\"> Entidad de Salud: </Label>\r\n                <Input id=\"entidadS\"\r\n\r\n                  className=\"form-control text-center\"\r\n                  name=\"entidadS\"\r\n                  type=\"text\"\r\n                  value={this.props.eps}\r\n                  bsSize=\"md\" readOnly >\r\n\r\n\r\n                </Input>\r\n              </FormGroup>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"formularioP\">\r\n            <div className=\"contieneFP\" id=\"formOcul\">\r\n              <div className=\"datosP mt-4 mb-2\">\r\n                <Label className=\"ml-3 mr-3 mt-3 font-weight-bold\">Informacion del Paciente</Label>\r\n                <FormGroup className=\"inputF ml-3 mr-3 mt-3\">\r\n                  <Label className=\"font-weight-bold\"> Nombre del Paciente </Label>\r\n                  <Input id=\"nombreP\"\r\n\r\n                    className=\"form-control text-center\"\r\n                    name=\"nombreP\"\r\n                    type=\"text\"\r\n                    value={this.state.nombreP}\r\n                    bsSize=\"md\" readOnly>\r\n\r\n\r\n                  </Input>\r\n                </FormGroup>\r\n                <FormGroup className=\"inputF ml-3 mr-3 mt-3\">\r\n                  <Label className=\"font-weight-bold\"> Edad del Paciente </Label>\r\n                  <Input id=\"edadP\"\r\n\r\n                    className=\"form-control text-center\"\r\n                    name=\"edadP\"\r\n                    type=\"text\"\r\n                    value={this.state.edadP}\r\n                    bsSize=\"md\" readOnly>\r\n\r\n\r\n                  </Input>\r\n                </FormGroup>\r\n                <FormGroup className=\"inputF ml-3 mr-3 mt-3\">\r\n                  <Label className=\"font-weight-bold\"> Dirrección del Paciente </Label>\r\n                  <Input id=\"direccionP\"\r\n\r\n                    className=\"form-control text-center\"\r\n                    name=\"direccionP\"\r\n                    type=\"text\"\r\n                    value={this.state.direccionP}\r\n                    bsSize=\"md\" readOnly>\r\n\r\n\r\n                  </Input>\r\n                </FormGroup>\r\n                <Button id=\"bper\" className=\"ml-3 mb-3 mt-4\" size=\"lg\" color='primary' onClick={() => this.mostarInser()} >\r\n                  Visita\r\n                                </Button>{' '}\r\n                <Button id=\"bper\" className=\"ml-3 mb-3 mt-4\" size=\"lg\" color='primary' onClick={() => this.terminarVisita()} >\r\n                  Cancelar\r\n                                        </Button>\r\n              </div>\r\n              <Modal\r\n                size=\"md\"\r\n                centered isOpen={this.state.modalInser} id=\"insertar\">\r\n                <ModalHeader>\r\n                  <div><h3>Registrar Visita</h3></div>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                  <Form>\r\n                    <div className=\"datosPM mt-2 mb-2\">\r\n\r\n                      <FormGroup className=\"inputF ml-3 mr-3 mt-3\">\r\n                        <div className=\"mensajeF\">\r\n                          <Label className=\"ocultoF font-weight-bold\"> Fecha de la Visita </Label>\r\n                          <Input id=\"fechaV\"\r\n\r\n                            className=\"form-control\"\r\n                            name=\"fechaV\"\r\n                            type=\"date\"\r\n                            bsSize=\"md\"\r\n                            value={this.state.fechaV}\r\n                            onChange={this.handleChange} >\r\n                          </Input>\r\n                          <span className=\"span\" id=\"sfechaV\">Debe Ingresar una Fecha valida</span>\r\n                        </div>\r\n                      </FormGroup>\r\n                      <FormGroup className=\"inputF ml-3 mr-3 mt-3\">\r\n                        <div className=\"mensajeH\">\r\n                          <Label className=\"ocultoH font-weight-bold\"> Hora de la Visita </Label>\r\n                          <Input id=\"horaV\"\r\n\r\n                            className=\"form-control\"\r\n                            name=\"horaV\"\r\n                            type=\"time\"\r\n                            bsSize=\"md\"\r\n                            value={this.state.horaV}\r\n                            onChange={this.handleChange} >\r\n                          </Input>\r\n                          <span className=\"span\" id=\"shoraV\">Debe Ingresar una Hora</span>\r\n                        </div>\r\n                      </FormGroup>\r\n                      <FormGroup className=\"inputF ml-3 mr-3 mt-3\">\r\n                        <div>\r\n                          <Input id=\"temperatura\"\r\n                            placeholder=\"Temperatura Del Paciente °C\"\r\n                            className=\"form-control\"\r\n                            name=\"temperatura\"\r\n                            type=\"number\"\r\n                            step=\".0\"\r\n                            bsSize=\"md\"\r\n                            value={this.state.temperatura}\r\n                            onChange={this.handleChange}>\r\n                          </Input>\r\n                          <span className=\"span\" id=\"stemperatura\">Debe Ingresar la Temperatura</span>\r\n                        </div>\r\n                      </FormGroup>\r\n                      <FormGroup className=\"inputF ml-3 mr-3 mt-3\">\r\n                        <div>\r\n                          <Input id=\"peso\"\r\n                            placeholder=\"Peso Kg\"\r\n                            className=\"form-control\"\r\n                            name=\"peso\"\r\n                            type=\"number\"\r\n                            bsSize=\"md\"\r\n                            value={this.state.peso}\r\n                            onChange={this.handleChange} >\r\n                          </Input>\r\n                          <span className=\"span\" id=\"speso\">Debe Ingresar el Peso</span>\r\n                        </div>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup className=\"inputF ml-3 mr-3 mt-3\">\r\n                        <div>\r\n                          <Input id=\"presionA\"\r\n                            placeholder=\"Presión Arterial\"\r\n                            className=\"form-control\"\r\n                            name=\"presionA\"\r\n                            type=\"text\"\r\n                            bsSize=\"md\"\r\n                            value={this.state.presionA}\r\n                            onChange={this.handleChange} >\r\n                          </Input>\r\n                          <span className=\"span\" id=\"spresionA\">Debe Ingresar la Presion Arterial</span>\r\n                        </div>\r\n                      </FormGroup>\r\n                      <FormGroup className=\"inputF ml-3 mr-3 mt-3\">\r\n                        <div className=\"mensajeM\">\r\n                          <Label className=\"ocultoM font-weight-bold\"> Medicamento </Label>\r\n                          <Input id=\"medicamento\"\r\n\r\n                            className=\"form-control\"\r\n                            name=\"medicamento\"\r\n                            type=\"select\"\r\n                            bsSize=\"md\"\r\n                            value={this.state.medicamento}\r\n                            onChange={this.handleChange}\r\n                            selectedIndex={this.state.medicamento}>\r\n                            <option selected=\"true\" disabled=\"disabled\">Medicamento</option>\r\n                            {this.state.medicamentos.map(med => (\r\n                              <option value={med.idmedicamento}>\r\n                                {med.medicamento}\r\n                              </option>\r\n                            ))}\r\n                          </Input>\r\n                          <span className=\"span\" id=\"smedicamento\">Debe Seleccionar un Medicamento</span>\r\n                        </div>\r\n                      </FormGroup>\r\n                      <FormGroup className=\"inputF ml-3 mr-3 mt-3\">\r\n                        <div>\r\n                          <Input id=\"dosis\"\r\n                            placeholder=\"Dosis Diaria\"\r\n                            className=\"form-control\"\r\n                            name=\"dosis\"\r\n                            type=\"text\"\r\n                            bsSize=\"md\"\r\n                            value={this.state.dosis}\r\n                            onChange={this.handleChange} >\r\n\r\n                          </Input>\r\n                          <span className=\"span\" id=\"sdosis\">Debe Ingresar la Dosis</span>\r\n                        </div>\r\n                      </FormGroup>\r\n                      <FormGroup className=\"inputF ml-3 mr-3 mt-3\">\r\n                        <div>\r\n                          <InputGroup>\r\n\r\n                            <FormControl\r\n                              as=\"textarea\"\r\n                              placeholder=\"Observación\"\r\n                              aria-label=\"Observación\"\r\n                              bsSize=\"md\"\r\n                              className=\"form-control\"\r\n                              name=\"obs\"\r\n                              id=\"obs\"\r\n                              value={this.state.obs}\r\n                              onChange={this.handleChange} />\r\n                          </InputGroup>\r\n                          <span className=\"span\" id=\"sobs\">Debe Ingresar una Observación</span>\r\n                        </div>\r\n                      </FormGroup>\r\n\r\n\r\n                    </div>\r\n                  </Form>\r\n                </ModalBody>\r\n                <ModalFooter >\r\n                  <Button color=\"success\" onClick={() => this.validacion()} >Registrar Visita</Button>\r\n                  <Button color=\"danger\" onClick={() => this.cancelar()} >Cancelar</Button>\r\n                </ModalFooter>\r\n              </Modal>\r\n\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Fragment } from 'react';\r\nimport './style.scss';\r\nimport { FormGroup, Table, Button, Form, Input, Label } from 'reactstrap';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport 'sweetalert2/src/sweetalert2.scss';\r\n\r\n\r\n\r\n\r\n\r\nexport default class Medicamentos extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //Medicamento 1\r\n      med1: '',\r\n      med1lab1: null,\r\n      med1lab2: null,\r\n      med1lab3: null,\r\n      med1lab4: null,\r\n      totalMed1: null,\r\n      //Medicamento 2\r\n      med2: '',\r\n      med2lab1: null,\r\n      med2lab2: null,\r\n      med2lab3: null,\r\n      med2lab4: null,\r\n      totalMed2: null,\r\n      //Medicamento 3\r\n      med3: '',\r\n      med3lab1: null,\r\n      med3lab2: null,\r\n      med3lab3: null,\r\n      med3lab4: null,\r\n      totalMed2: null,\r\n      //\r\n      cantidad: null,\r\n      descontar: null,\r\n\r\n      inven: [],\r\n\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await fetch(`http://localhost:5000/stock`)\r\n      .then(response => response.json())\r\n      .then((result) => {\r\n        this.setState({\r\n          med1: result[0].medicamento,\r\n          med1lab1: result[0].cantidad,\r\n          med1lab2: result[1].cantidad,\r\n          med1lab3: result[2].cantidad,\r\n          med1lab4: result[3].cantidad,\r\n          med2: result[4].medicamento,\r\n          med2lab1: result[4].cantidad,\r\n          med2lab2: result[5].cantidad,\r\n          med2lab3: result[6].cantidad,\r\n          med2lab4: result[7].cantidad,\r\n          med3: result[8].medicamento,\r\n          med3lab1: result[8].cantidad,\r\n          med3lab2: result[9].cantidad,\r\n          med3lab3: result[10].cantidad,\r\n          med3lab4: result[11].cantidad,\r\n        });\r\n\r\n        const total1 = this.state.med1lab1 + this.state.med1lab2 + this.state.med1lab3 + this.state.med1lab4\r\n            this.setState({\r\n              totalMed1: total1\r\n            });\r\n            const total2 = this.state.med2lab1 + this.state.med2lab2 + this.state.med2lab3 + this.state.med2lab4\r\n            this.setState({\r\n              totalMed2: total2\r\n            });\r\n            const total3 = this.state.med3lab1 + this.state.med3lab2 + this.state.med3lab3 + this.state.med3lab4\r\n\r\n            this.setState({\r\n              totalMed3: total3\r\n            });\r\n            let matrix = [];\r\n            var x = 0;\r\n            for (var i = 0; i < 3; i++) {\r\n              let fila = [];\r\n              for (var j = 0; j < 4; j++) {\r\n                fila[j]= result[x].cantidad;\r\n                x++\r\n              }\r\n              matrix[i] = fila;\r\n            }\r\n            this.setState({\r\n              inven: matrix\r\n            });\r\n      });\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  async validaCantidad() {\r\n    const medi = document.getElementById('medi').selectedIndex;\r\n    const lab = document.getElementById('labo').selectedIndex;\r\n    if (medi != 0) {\r\n      if (lab != 0) {\r\n        if (this.state.cantidad != null) {\r\n          const medica = medi - 1\r\n          const labo = lab - 1\r\n          var exis = this.state.inven[medica][labo];\r\n          const des = exis - this.state.cantidad;\r\n          if (des >= 0){\r\n            return true\r\n          }\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: 'No hay Existencias Suficientes para realizar la Reserva.',\r\n          })\r\n          return false\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: 'Ingrese La Cantidad a Reservar.',\r\n          })\r\n          return false\r\n        }\r\n      } else {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: 'Seleccione el Laboratorio donde desea Reservar.',\r\n        })\r\n        return false\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Seleccione el Medicamento a Reservar.',\r\n      })\r\n      return false\r\n    }\r\n  }\r\n\r\n  async descontar() {\r\n    var x = await this.validaCantidad();\r\n    if (x) {\r\n      var cant = this.state.cantidad\r\n      var idmed = document.getElementById('medi').selectedIndex \r\n      var idlab = document.getElementById('labo').selectedIndex\r\n      var iddoc = this.props.idDoc\r\n      var med = null\r\n\r\n      if (idmed === 1) {\r\n        med = this.state.med1\r\n      }\r\n      else if (idmed === 2) {\r\n        med = this.state.med2\r\n      }\r\n      else if (idmed === 3) {\r\n        med = this.state.med3\r\n      }\r\n\r\n      const body = { iddoc, idmed, cant, idlab }\r\n\r\n      await fetch(`http://localhost:5000/pedido`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body)\r\n        })\r\n\r\n      await Swal.fire({\r\n        icon: 'success',\r\n        title: `Se ha Realizado la Reserva de ${this.state.cantidad}`,\r\n        text: `De ${med} del Lab#${idlab}`,\r\n        showConfirmButton: false,\r\n        timer: 2000\r\n      })\r\n\r\n      this.setear();\r\n      this.componentDidMount();\r\n\r\n    }\r\n  }\r\n\r\n  setear() {\r\n\r\n    document.getElementById('op').selected = 'true';\r\n    document.getElementById('opo').selected = 'true';\r\n    document.getElementById('cantidad').value = null;\r\n\r\n    this.setState({\r\n      cantidad: null,\r\n      descontar: null,\r\n\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment >\r\n        <div className=\"total\">\r\n\r\n          <div className=\"header mt-2 text-center \" id=\"login\"><h2 className=\"Titulo m-2 \" >Medicamentos</h2></div>\r\n\r\n          <div className=\"conteneTabla \">\r\n            <div className='contieneTabla'>\r\n\r\n              <div className='soli'>\r\n                <div className='soliLabel'>\r\n                  <Label className='font-weight-bold'>Solicitar Medicamentos</Label>\r\n                </div>\r\n                <Form>\r\n\r\n                  <FormGroup className='soliM'>\r\n                    <Input\r\n                      id='medi'\r\n                      type='select'\r\n                      name='medi'\r\n\r\n                    >\r\n                      <option id='op' selected=\"true\" disabled=\"disabled\">Medicamentos</option>\r\n                      <option >{this.state.med1}</option>\r\n                      <option >{this.state.med2}</option>\r\n                      <option >{this.state.med3}</option>\r\n\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup className='soliL'>\r\n                    <Input\r\n                      id='labo'\r\n                      name='labo'\r\n                      type='select'\r\n                    >\r\n                      <option id='opo' selected=\"true\" disabled=\"disabled\">Laboratorios</option>\r\n                      <option >Laboratorio #1</option>\r\n                      <option >Laboratorio #2</option>\r\n                      <option >Laboratorio #3</option>\r\n                      <option >Laboratorio #4</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup className='soliL'>\r\n                    <Input\r\n                      id='cantidad'\r\n                      type='number'\r\n                      name='cantidad'\r\n                      placeholder='Cantidad'\r\n                      className=\"form-control\"\r\n                      value={this.state.cantidad}\r\n                      onChange={this.handleChange}\r\n                    >\r\n\r\n\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <Button className='soliB font-weight-bold' size=\"md\" onClick={() => this.descontar()} color='primary'>Solicitar</Button>\r\n                </Form>\r\n              </div>\r\n              <Table className='tabla text-center' striped bordered hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th className='font-weight-bold'>Medicamentos</th>\r\n                    <th className='font-weight-bold'>Laboratorio # 1</th>\r\n                    <th className='font-weight-bold'>Laboratorio # 2</th>\r\n                    <th className='font-weight-bold'>Laboratorio # 3</th>\r\n                    <th className='font-weight-bold'>Laboratorio # 4</th>\r\n                    <th className='font-weight-bold'>Total</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td className='font-weight-bold'>{this.state.med1}</td>\r\n                    <td>{this.state.med1lab1}</td>\r\n                    <td>{this.state.med1lab2}</td>\r\n                    <td>{this.state.med1lab3}</td>\r\n                    <td>{this.state.med1lab4}</td>\r\n                    <td>{this.state.totalMed1}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className='font-weight-bold'>{this.state.med2}</td>\r\n                    <td>{this.state.med2lab1}</td>\r\n                    <td>{this.state.med2lab2}</td>\r\n                    <td>{this.state.med2lab3}</td>\r\n                    <td>{this.state.med2lab4}</td>\r\n                    <td>{this.state.totalMed2}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className='font-weight-bold'>{this.state.med3}</td>\r\n                    <td>{this.state.med3lab1}</td>\r\n                    <td>{this.state.med3lab2}</td>\r\n                    <td>{this.state.med3lab3}</td>\r\n                    <td>{this.state.med3lab4}</td>\r\n                    <td>{this.state.totalMed3}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route, Link, Redirect } from 'react-router-dom';\r\nimport \"../Login/syle.scss\";\r\nimport { Button } from 'reactstrap';\r\nimport InformesDoc from './InformesDoc';\r\nimport MapaDoctor from './mapaDoctor';\r\nimport Registro from './Registro';\r\nimport Medicamentos from './Medicamentos';\r\nimport './style.scss';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport 'sweetalert2/src/sweetalert2.scss';\r\n\r\n\r\nexport default class NavDoc extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n      redirect: null,\r\n      match: null,\r\n      //Datos Doc\r\n      idusuD: null,\r\n      idpD: null,\r\n      nombreD: null,\r\n      apellidoD: null,\r\n      tipodD: null,\r\n      numerdD: null,\r\n      idDoc: null,\r\n      eps: null,\r\n      id: null,\r\n      //\r\n\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.setState({\r\n      match : this.props.match.params,\r\n      //id: this.state.match.id\r\n  })\r\n  \r\n  const algo = parseInt(this.state.match.id)\r\n  this.setState({\r\n      id: algo\r\n  })\r\n    await fetch(`http://localhost:5000/usudoctor/${algo}`)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            idusuD: result.idusuario,\r\n            idpD: result.idpersona,\r\n            nombreD: result.nombre,\r\n            apellidoD: result.apellido,\r\n            tipodD: result.tipodocument,\r\n            numerdD: result.numerodoc,\r\n            idDoc: result.iddoctor,\r\n            eps: result.eps\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  logOut() {\r\n    Swal.fire({\r\n      title: 'Esta Seguro ?',\r\n      text: \"Desea Cerrar Sesión ?\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si !'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.setState({ redirect: '/' })\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    \r\n\r\n    if (this.state.redirect) {\r\n\r\n      return <Redirect to={\r\n        this.state.redirect\r\n      } />\r\n\r\n    }\r\n\r\n    return (\r\n\r\n      <BrowserRouter >\r\n        <div className=\"total\">\r\n          <nav class=\"navbar navbar-expand-lg navbar-light bg-primary\">\r\n\r\n            <h1 class=\"navbar-brand ml-3 font-weight-bold \" >Bienvenido Doctor {this.state.nombreD} {this.state.apellidoD}</h1>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n              <ul class=\"navbar-nav ml-auto mr-5\">\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"btn font-weight-bold\" to={`/NavDoc/${this.state.id}/MapaDoc`} activeClassName=\"active\"> Mapa <i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i></Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"btn font-weight-bold\" to={`/NavDoc/${this.state.id}/InformesDoc`} activeClassName=\"active\"> Informes <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i></Link>\r\n                </li>\r\n                <li >\r\n                  <Link className=\"btn font-weight-bold\" to={`/NavDoc/${this.state.id}`} activeClassName=\"active\"> Registrar Visita <i class=\"fa fa-folder-open-o\" aria-hidden=\"true\"></i></Link>\r\n                </li>\r\n                <li >\r\n                  <Link className=\"btn font-weight-bold\" to={`/NavDoc/${this.state.id}/Medicamentos`} activeClassName=\"active\"> Medicamentos <i class=\"fa fa-heartbeat\" aria-hidden=\"true\"></i></Link>\r\n                </li>\r\n                <li >\r\n                  <Button color='info' className=\"btn font-weight-bold ml-2\" onClick={() => this.logOut()} activeClassName=\"active\"> LogOut <i class=\"fa fa-sign-out\" aria-hidden=\"true\"></i></Button>\r\n                </li>\r\n\r\n\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n\r\n          <Switch>\r\n            <Route path=\"/NavDoc/:id/MapaDoc\">\r\n              <MapaDoctor />\r\n            </Route>\r\n\r\n            <Route path=\"/NavDoc/:id/InformesDoc\">\r\n              <InformesDoc />\r\n            </Route>\r\n            <Route path=\"/NavDoc/:id/Medicamentos\">\r\n              <Medicamentos idDoc={this.state.idDoc} />\r\n            </Route>\r\n            <Route exact path=\"/NavDoc/:id\">\r\n              <Registro idpD={this.state.idpD} idDoc={this.state.idDoc} tipodD={this.state.tipodD}\r\n                numerdD={this.state.numerdD} eps={this.state.eps} />\r\n\r\n            </Route>\r\n          </Switch>\r\n\r\n\r\n\r\n        </div>\r\n\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}","import React, { Fragment } from \"react\";\r\nimport { Button, Form, Label, FormGroup, Input, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, ButtonGroup, Table } from \"reactstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport 'sweetalert2/src/sweetalert2.scss';\r\n\r\nimport { CrearPersona } from '../Login/index';\r\n\r\n\r\nexport default class CrearDoctor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            match: props.idusu,\r\n            admin: [],\r\n            personas: [],\r\n            persona: null,\r\n            //Modals\r\n            modalEmer: false,\r\n            modalInserD: false,\r\n            modalInserP: false,\r\n            modalActuD: false,\r\n            modalParen: false,\r\n            modalTel: false,\r\n            modalEmail: false,\r\n            //\r\n            //Emergencias\r\n            emer: null,\r\n            perEmer: null,\r\n            tablaEmer: [],\r\n            telEmer: [],\r\n            telEmerB: [],\r\n            emailEmer: [],\r\n            emailEmerB: [],\r\n            seleccionada: null,\r\n            emerEma: '',\r\n            emerTel: '',\r\n            //Parentesco\r\n            paren: null,\r\n            perParen: null,\r\n            tablaParen: [],\r\n            //\r\n            nombrePa: '',\r\n            selecdoc: null,\r\n            selecpa: null,\r\n            listDoc: [],\r\n            listPac: [],\r\n            //Info Modal Doc\r\n            universidad: null,\r\n            universidades: [],\r\n            eps: null,\r\n            epss: [],\r\n            //\r\n            //Actu Modal Doc\r\n            nombreAD: '',\r\n            apellidoAD: '',\r\n            tipoD_AD: null,\r\n            idenAD: '',\r\n            barrioAD: null,\r\n            fechaAD: null,\r\n            emailAD: [],\r\n            emailBAD: [],\r\n            telAD: [],\r\n            telBAD: [],\r\n            uniAD: null,\r\n            epsAD: null,\r\n            idPerDoc: null,\r\n            //Direccion Doc\r\n            viaPD: null,\r\n            numViaPD: '',\r\n            numViaSD: '',\r\n            numCasaD: '',\r\n            tipoInmD: null,\r\n            comTipoInmD: '',\r\n            bloqueIntD: null,\r\n            comBloqueIntD: '',\r\n            idDirecDoc: null,\r\n            //Hay Email y Tell\r\n            hayEmail: false,\r\n            hayTel: false,\r\n            //Barrios y TiposID\r\n            barrios: [],\r\n            tiposDOC: [],\r\n\r\n            // Selects Direccion\r\n            selViaP: [],\r\n            selTipoInm: [],\r\n            selBloqueInt: [],\r\n            //Info Modal Pac\r\n            numIP: null,\r\n            geoPLA: '',\r\n            geoPLO: '',\r\n            docSelP: null,\r\n            ciudadP: null,\r\n            selCiudades: [],\r\n            //\r\n            haydoc: false,\r\n            haypac: false\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    // Inicializacion\r\n\r\n    async componentDidMount() {\r\n\r\n        await fetch('http://localhost:5000/persona/')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        personas: result\r\n                    });\r\n\r\n                }\r\n            )\r\n\r\n        await fetch('http://localhost:5000/doctores/')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        listDoc: result\r\n                    });\r\n\r\n                }\r\n            )\r\n\r\n        await fetch('http://localhost:5000/universidades/')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        universidades: result\r\n                    });\r\n\r\n                }\r\n            )\r\n        await fetch('http://localhost:5000/eps/')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        epss: result\r\n                    });\r\n\r\n                }\r\n            )\r\n\r\n        await fetch('http://localhost:5000/tipodoc/')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        tiposDOC: result\r\n                    });\r\n                }\r\n            )\r\n\r\n        await fetch('http://localhost:5000/barrio/')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        barrios: result\r\n                    });\r\n                }\r\n            )\r\n\r\n        await fetch('http://localhost:5000/viap/')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        selViaP: result\r\n                    });\r\n                }\r\n            )\r\n\r\n        await fetch('http://localhost:5000/inmueble/')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        selTipoInm: result\r\n                    });\r\n                }\r\n            )\r\n\r\n        await fetch('http://localhost:5000/bloque/')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        selBloqueInt: result\r\n                    });\r\n                }\r\n            )\r\n\r\n        await fetch('http://localhost:5000/ciudades/')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        selCiudades: result\r\n                    });\r\n                }\r\n            )\r\n\r\n        await fetch('http://localhost:5000/pacientes/')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        listPac: result\r\n                    });\r\n                }\r\n            )\r\n\r\n    }\r\n\r\n    // Crear Doctores y Pacientes\r\n\r\n    async hayDoctor() {\r\n        await fetch(`http://localhost:5000/doctor/${this.state.persona}`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result.length === 0) {\r\n                    this.setState({\r\n                        haydoc: false\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        haydoc: true\r\n                    });\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n    async hayPaciente() {\r\n        await fetch(`http://localhost:5000/paciente/${this.state.persona}`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result.length === 0) {\r\n                    this.setState({\r\n                        haypac: false\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        haypac: true\r\n                    });\r\n                }\r\n\r\n            });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    async crearPac() {\r\n\r\n        const nombre = this.state.personas[document.getElementById('persona').selectedIndex - 1].nombre;\r\n        const apellido = this.state.personas[document.getElementById('persona').selectedIndex - 1].apellido;\r\n        var idpersona = this.state.persona;\r\n        var numintegrantes = this.state.numIP;\r\n        var latitud = this.state.geoPLA;\r\n        var longitud = this.state.geoPLO;\r\n        var iddoctor = this.state.docSelP;\r\n        var ciudadcontagio = this.state.ciudadP;\r\n        var hoy = new Date();\r\n        var fecha = hoy.getFullYear() + '-' + (hoy.getMonth() + 1) + '-' + hoy.getDate();\r\n        var hora = hoy.getHours() + ':' + hoy.getMinutes() + ':' + hoy.getSeconds();\r\n        var idusu = this.props.idusu;\r\n        var idpaciente = null;\r\n\r\n        const body = { idpersona, numintegrantes, ciudadcontagio }\r\n\r\n\r\n\r\n        await fetch(`http://localhost:5000/paciente/`,\r\n            {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n            });\r\n\r\n        await fetch(`http://localhost:5000/paciente/${idpersona}`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                idpaciente = result[0].idpaciente;\r\n            });\r\n\r\n\r\n        const bodyG = { idpaciente, latitud, longitud }\r\n\r\n        await fetch(`http://localhost:5000/geoloca/`,\r\n            {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(bodyG)\r\n            });\r\n\r\n        const bodyD = { idpaciente, iddoctor }\r\n\r\n        await fetch(`http://localhost:5000/atencion/`,\r\n            {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(bodyD)\r\n            });\r\n\r\n        const bodyR = { idusu, idpaciente, fecha, hora }\r\n\r\n\r\n        await fetch(`http://localhost:5000/registropac/`,\r\n            {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(bodyR)\r\n            });\r\n\r\n        await Swal.fire({\r\n            icon: 'success',\r\n            title: `Se ha agregado el Paciente ${nombre} ${apellido}`,\r\n            text: 'Registre los Parientes de este Paciente',\r\n            showConfirmButton: false,\r\n            timer: 2500\r\n        });\r\n\r\n        this.cancelarP();\r\n        this.modalParen();\r\n\r\n\r\n    }\r\n\r\n    async crearDoctor() {\r\n\r\n        const indexU = document.getElementById('universidad').selectedIndex - 1;\r\n        const indexE = document.getElementById('eps').selectedIndex - 1;\r\n\r\n        if (indexU >= 0 && indexE >= 0) {\r\n            var idpersona = this.state.persona;\r\n            var identidadsalud = this.state.eps;\r\n            var iduniversidad = this.state.universidad;\r\n            const nombre = this.state.personas[document.getElementById('persona').selectedIndex - 1].nombre;\r\n            const apellido = this.state.personas[document.getElementById('persona').selectedIndex - 1].apellido;\r\n            var hoy = new Date();\r\n            var fecha = hoy.getFullYear() + '-' + (hoy.getMonth() + 1) + '-' + hoy.getDate();\r\n            var hora = hoy.getHours() + ':' + hoy.getMinutes() + ':' + hoy.getSeconds();\r\n            var idusu = this.props.idusu;\r\n            var iddoc = null;\r\n\r\n            const body = { idpersona, identidadsalud, iduniversidad }\r\n\r\n\r\n            await fetch(`http://localhost:5000/doctor/`,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(body)\r\n                }\r\n            );\r\n\r\n            await fetch(`http://localhost:5000/id_doctor/`)\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    iddoc = result[0].iddoctor;\r\n                })\r\n\r\n\r\n            const bodyR = { idusu, iddoc, fecha, hora }\r\n\r\n\r\n            await fetch(`http://localhost:5000/registrodoc/`,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(bodyR)\r\n                });\r\n            await Swal.fire({\r\n                icon: 'success',\r\n                title: `Se ha agregado el Doctor ${nombre} ${apellido}`,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n            this.cancelarD();\r\n            window.location.reload();\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Seleccione una Universidad y una Eps Valida.',\r\n            })\r\n        }\r\n    }\r\n\r\n    //Actualizar Doctor\r\n\r\n    async actuDoc() {\r\n\r\n\r\n        const id = document.getElementById('docSelec').value;\r\n        var nombre = this.state.nombreAD;\r\n        var apellido = this.state.apellidoAD;\r\n        var tipodoc = this.state.tipoD_AD;\r\n        var numerodoc = this.state.idenAD;\r\n        var barrio = this.state.barrioAD;\r\n        var fechanaci = this.state.fechaAD;\r\n        var iduniversidad = this.state.uniAD;\r\n        var identidadsalud = this.state.epsAD;\r\n        var idpersona = this.state.idPerDoc;\r\n        // Direccion\r\n        var idviaprincipal = this.state.viaPD;\r\n        var numeroviap = this.state.numViaPD;\r\n        var numerovias = this.state.numViaSD;\r\n        var numerocasa = this.state.numCasaD;\r\n        var idtipoinmueble = this.state.tipoInmD;\r\n        var idbloqueinterior = this.state.bloqueIntD;\r\n        var numeroinmueble = this.state.comTipoInmD;\r\n        var numerobloque = this.state.comBloqueIntD;\r\n        var iddireccion = this.state.idDirecDoc;\r\n\r\n\r\n        const body = { nombre, apellido, tipodoc, numerodoc, barrio, fechanaci }\r\n\r\n\r\n        await fetch(`http://localhost:5000/persona/${idpersona}`,\r\n            {\r\n                method: \"PUT\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n            });\r\n\r\n        const bodyD = { identidadsalud, iduniversidad }\r\n\r\n\r\n        await fetch(`http://localhost:5000/doctor/${id}`,\r\n            {\r\n                method: \"PUT\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(bodyD)\r\n            });\r\n\r\n\r\n        // Direccion\r\n        if (idtipoinmueble === 'Tipo de Inmueble') {\r\n            idtipoinmueble = null;\r\n\r\n        }\r\n        if (idbloqueinterior === 'Bloque o Interior') {\r\n            idbloqueinterior = null;\r\n\r\n        }\r\n\r\n        const bodyDirec = { idviaprincipal, numeroviap, numerovias, numerocasa, idtipoinmueble, idbloqueinterior, numeroinmueble, numerobloque }\r\n\r\n\r\n        fetch(`http://localhost:5000/direccion/${iddireccion}`,\r\n            {\r\n                method: \"PUT\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(bodyDirec)\r\n\r\n            });\r\n\r\n\r\n\r\n        //Email inser\r\n\r\n        for (var i = 0; i < this.state.emailAD.length; i++) {\r\n            await this.hayEmail(idpersona, this.state.emailAD[i])\r\n            if (!this.state.hayEmail) {\r\n\r\n                var email = this.state.emailAD[i]\r\n                const body = { email, idpersona }\r\n\r\n                await fetch(`http://localhost:5000/email`, {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(body)\r\n                });\r\n            }\r\n        }\r\n\r\n        //Email Delet\r\n\r\n        for (var i = 0; i < this.state.emailBAD.length; i++) {\r\n            await this.hayEmail(idpersona, this.state.emailAD[i])\r\n            if (this.state.hayEmail) {\r\n\r\n                var email = this.state.emailBAD[i]\r\n\r\n                await fetch(`http://localhost:5000/emaildel/${idpersona}/${email}`,\r\n                    {\r\n                        method: \"DELETE\",\r\n                        headers: { \"Content-Type\": \"application/json\" },\r\n\r\n                    });\r\n            }\r\n        }\r\n\r\n        //Tel Inser\r\n\r\n        for (var i = 0; i < this.state.telAD.length; i++) {\r\n            await this.hayTel(idpersona, this.state.telAD[i])\r\n            if (!this.state.hayTel) {\r\n\r\n                var telefono = this.state.telAD[i]\r\n                const body = { telefono, idpersona }\r\n\r\n                await fetch(`http://localhost:5000/telefono`, {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(body)\r\n                });\r\n            }\r\n        }\r\n\r\n        //Tel Delete\r\n\r\n        for (var i = 0; i < this.state.telBAD.length; i++) {\r\n            await this.hayTel(idpersona, this.state.telBAD[i])\r\n            if (this.state.hayTel) {\r\n\r\n                var telefono = this.state.telBAD[i]\r\n\r\n                await fetch(`http://localhost:5000/teldel/${idpersona}/${telefono}`,\r\n                    {\r\n                        method: \"DELETE\",\r\n                        headers: { \"Content-Type\": \"application/json\" },\r\n\r\n                    });\r\n            }\r\n        }\r\n\r\n        await Swal.fire({\r\n            icon: 'success',\r\n            title: `Se ha Actualizado el Doctor ${nombre} ${apellido}`,\r\n            showConfirmButton: false,\r\n            timer: 2000\r\n        });\r\n\r\n        this.cancelarActuD();\r\n        window.location.reload();\r\n\r\n\r\n    }\r\n\r\n    // Hay Email y Tel\r\n\r\n    async hayEmail(idp, email) {\r\n\r\n        await fetch(`http://localhost:5000/emailhay/${idp}/${email}`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result.length === 0) {\r\n                    this.setState({\r\n                        hayEmail: false\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        hayEmail: true\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    async hayTel(idp, tel) {\r\n        await fetch(`http://localhost:5000/telhay/${idp}/${tel}`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result.length === 0) {\r\n                    this.setState({\r\n                        hayTel: false\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        hayTel: true\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    //Cargar Datos ActuDoc\r\n\r\n    async cargarDatosActuDoc() {\r\n        const id = document.getElementById('docSelec').value;\r\n\r\n        await fetch(`http://localhost:5000/doctorinfo/${id}`)\r\n            .then(response => response.json())\r\n            .then((result) => {\r\n\r\n                this.setState({\r\n                    nombreAD: result.nombre,\r\n                    apellidoAD: result.apellido,\r\n                    idenAD: result.numerodoc,\r\n                    tipoD_AD: result.idtipo,\r\n                    barrioAD: result.id_barrio,\r\n                    uniAD: result.iduniversidad,\r\n                    epsAD: result.ideps,\r\n                    fechaAD: result.fechanaci.substr(0, 10),\r\n                    idPerDoc: result.idpersona,\r\n\r\n                });\r\n\r\n\r\n            });\r\n\r\n        await fetch(`http://localhost:5000/email/${this.state.idPerDoc}`)\r\n            .then(response => response.json())\r\n            .then((result) => {\r\n\r\n                for (var i = 0; i < result.length; i++) {\r\n\r\n                    this.setState({\r\n                        emailAD: [...this.state.emailAD, result[i].email]\r\n                    })\r\n                }\r\n            });\r\n\r\n\r\n\r\n        await fetch(`http://localhost:5000/telefono/${this.state.idPerDoc}`)\r\n            .then(response => response.json())\r\n            .then((result) => {\r\n\r\n                for (var i = 0; i < result.length; i++) {\r\n                    this.setState({\r\n                        telAD: [...this.state.telAD, result[i].telefono]\r\n                    })\r\n                }\r\n            });\r\n\r\n        await fetch(`http://localhost:5000/direccion/${this.state.idPerDoc}`)\r\n            .then(response => response.json())\r\n            .then((result) => {\r\n\r\n                this.setState({\r\n                    viaPD: result.idviaprincipal,\r\n                    numViaPD: result.numeroviap,\r\n                    numViaSD: result.numerovias,\r\n                    numCasaD: result.numerocasa,\r\n                    tipoInmD: result.idtipoinmueble,\r\n                    comTipoInmD: result.numeroinmueble,\r\n                    bloqueIntD: result.idbloqueinterior,\r\n                    comBloqueIntD: result.numerobloque,\r\n                    idDirecDoc: result.iddireccion,\r\n                });\r\n\r\n\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n    // Eliminar Doctor\r\n\r\n    async borrarDoctor() {\r\n        const id = document.getElementById('docSelec').value;\r\n        Swal.fire({\r\n            title: 'Esta Seguro ?',\r\n            text: \"No se podra Recuperar!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, Borrar!'\r\n        }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n                await fetch(`http://localhost:5000/doctor/${id}`, {\r\n                    method: 'DELETE',\r\n                    headers: { \"Content-Type\": \"application/json\" }\r\n                })\r\n                await Swal.fire({\r\n                    icon: 'success',\r\n                    title: `Se ha Eliminado el Doctor`,\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n                window.location.reload();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    // ---------------- Email --------------------\r\n\r\n    async agregarEmail(x) {\r\n        var { value: email } = await Swal.fire({\r\n            title: 'Ingrese su Email',\r\n            input: 'email',\r\n            inputLabel: 'Su Correo Electronico es : ',\r\n            showCancelButton: true,\r\n            inputPlaceholder: 'Email'\r\n\r\n        })\r\n        if (email && x === 'D') {\r\n            var corritos = this.state.emailAD\r\n            corritos.push(email)\r\n            this.setState({\r\n                emailAD: corritos\r\n            });\r\n\r\n            Swal.fire(`Email Ingresado: ${email}`)\r\n        }\r\n        if (email === 'P') {\r\n            var corritos = this.state.emailAD\r\n            corritos.push(email)\r\n            this.setState({\r\n                emailAD: corritos\r\n            });\r\n\r\n            Swal.fire(`Email Ingresado: ${email}`)\r\n        }\r\n    }\r\n\r\n    borrarEmailAD() {\r\n\r\n        var valor = document.getElementById('emailAD').value;\r\n        var corritos = []\r\n        corritos.push(valor)\r\n        this.setState({\r\n            emailBAD: [...this.state.emailBAD, corritos],\r\n            emailAD: this.state.emailAD.filter(mail => mail !== valor)\r\n        });\r\n    }\r\n\r\n\r\n    // ---------------- Telefono --------------------\r\n\r\n\r\n    tiene_letras(texto) {\r\n        var letras = 'abcdefghyjklmnñopqrstuvwxyz!\"}#$%&+)@.,-{/(=?¡';\r\n        texto = texto.toLowerCase();\r\n        for (var i = 0; i < texto.length; i++) {\r\n            if (letras.indexOf(texto.charAt(i), 0) !== -1) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    async agregarTel(x) {\r\n        var { value: tel } = await Swal.fire({\r\n            title: 'Ingrese su Telefono',\r\n            input: 'text',\r\n            inputLabel: 'Su Telefono es : ',\r\n            inputPlaceholder: 'Telefonos',\r\n            showCancelButton: true,\r\n            inputValidator: (value) => {\r\n                return new Promise((resolve) => {\r\n                    if ((value.length === 10 || value.length === 7) && this.tiene_letras(value)) {\r\n                        resolve()\r\n                    } else {\r\n                        resolve('Debe tener 10(Celular) o 7(Fijo)  Digitos y estos deben ser Numeros')\r\n                    }\r\n                }\r\n\r\n                )\r\n            }\r\n        })\r\n        if (tel && tel.length <= 10 && x === 'D') {\r\n            var corritos = this.state.telAD\r\n            corritos.push(tel)\r\n            this.setState({\r\n                telAD: corritos\r\n            });\r\n\r\n            Swal.fire(`Telefono Ingresado: ${tel}`)\r\n        }\r\n        if (tel && tel.length <= 10 && x === 'P') {\r\n            var corritos = this.state.telefonoAD\r\n            corritos.push(tel)\r\n            this.setState({\r\n                telAD: corritos\r\n            });\r\n\r\n            Swal.fire(`Telefono Ingresado: ${tel}`)\r\n        }\r\n    }\r\n\r\n    borrarTelAD() {\r\n        var valor = document.getElementById('telAD').value;\r\n        var corritos = []\r\n        corritos.push(valor)\r\n        this.setState({\r\n            telBAD: [...this.state.telBAD, corritos],\r\n            telAD: this.state.telAD.filter(tele => tele !== valor)\r\n        });\r\n    }\r\n\r\n    //Parentesco\r\n\r\n    agregarParen() {\r\n        const paren = document.getElementById('paren').selectedIndex\r\n        const perParen = document.getElementById('perParen').selectedIndex\r\n        var bool = true;\r\n        if (paren !== 0 && perParen !== 0) {\r\n            const arreglo = {\r\n                paren: this.state.paren, nombre: this.state.personas[perParen - 1].nombre + ' ' + this.state.personas[perParen - 1].apellido,\r\n                doc: this.state.personas[perParen - 1].numerodoc, id: this.state.personas[perParen - 1].idpersona\r\n            }\r\n            for (var i = 0; i < this.state.tablaParen.length; i++) {\r\n                if (this.state.tablaParen[i].id === arreglo.id) {\r\n                    bool = false;\r\n                }\r\n            }\r\n            if (bool === true) {\r\n\r\n                this.setState({\r\n                    tablaParen: [...this.state.tablaParen, arreglo]\r\n                });\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Esta Persona ya se agrego a la Lista de Parentesco.',\r\n                });\r\n            }\r\n\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Seleccione una Persona y su Parentesco.',\r\n            });\r\n        }\r\n    }\r\n\r\n    borrarParen(x) {\r\n        var arreglo = this.state.tablaParen;\r\n        var index = null;\r\n        for (var i = 0; i < this.state.tablaParen.length; i++) {\r\n            if (this.state.tablaParen[i].nombre === x) {\r\n                index = i;\r\n            }\r\n        }\r\n        arreglo.splice(index, 1);\r\n        this.setState({\r\n            tablaParen: arreglo\r\n        })\r\n    }\r\n\r\n\r\n    async crearParent() {\r\n        if (this.state.tablaParen.length !== 0) {\r\n            var idpac = null;\r\n            var idper = null;\r\n            var paren = '';\r\n\r\n            await fetch(`http://localhost:5000/pacientesid`)\r\n                .then(response => response.json())\r\n                .then((result) => {\r\n                    idpac = parseInt(result.idpaciente);\r\n                });\r\n\r\n            for (var i = 0; i < this.state.tablaParen.length; i++) {\r\n                idper = parseInt(this.state.tablaParen[i].id);\r\n                paren = this.state.tablaParen[i].paren;\r\n\r\n                const body = { idpac, idper, paren }\r\n\r\n                await fetch(`http://localhost:5000/integrantes`,\r\n                    {\r\n                        method: \"POST\",\r\n                        headers: { \"Content-Type\": \"application/json\" },\r\n                        body: JSON.stringify(body)\r\n                    });\r\n\r\n\r\n            }\r\n\r\n            await Swal.fire({\r\n                icon: 'success',\r\n                title: `Se ha Agregado los Parientes`,\r\n                showConfirmButton: false,\r\n                timer: 1750\r\n            })\r\n\r\n            this.cancelarParen();\r\n            this.componentDidMount();\r\n            this.modalEmergencia();\r\n\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Debe Agregar las Personas con su Respectivo Parentesco.',\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    // Emergencia\r\n\r\n    async agregarEmer() {\r\n        const rela = document.getElementById('emer').selectedIndex\r\n        const perEmer = document.getElementById('perEmer').selectedIndex\r\n        var bool = true;\r\n        if (rela !== 0 && perEmer !== 0) {\r\n            const arreglo = {\r\n                rela: this.state.emer, nombre: this.state.personas[perEmer - 1].nombre + ' ' + this.state.personas[perEmer - 1].apellido,\r\n                doc: this.state.personas[perEmer - 1].numerodoc, id: this.state.personas[perEmer - 1].idpersona\r\n            }\r\n            for (var i = 0; i < this.state.tablaEmer.length; i++) {\r\n                if (this.state.tablaEmer[i].id === arreglo.id) {\r\n                    bool = false;\r\n                }\r\n            }\r\n            if (bool === true) {\r\n\r\n                this.setState({\r\n                    tablaEmer: [...this.state.tablaEmer, arreglo]\r\n                });\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Esta Persona ya se agrego a la Lista de Contactos.',\r\n                });\r\n            }\r\n\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Seleccione una Persona y su Relación.',\r\n            });\r\n        }\r\n    }\r\n\r\n    async crearEmer() {\r\n        if (this.state.tablaEmer.length >= 2) {\r\n            var idpac = null;\r\n            var idper = null;\r\n            var rela = '';\r\n\r\n            await fetch(`http://localhost:5000/pacientesid`)\r\n                .then(response => response.json())\r\n                .then((result) => {\r\n                    idpac = parseInt(result.idpaciente);\r\n                });\r\n\r\n            var bool = true;\r\n            for (var y = 0; y < this.state.tablaEmer.length; y++) {\r\n                if (!this.tieneAlMenosUno(this.state.tablaEmer[y].id)) {\r\n                    bool = false;\r\n                }\r\n            }\r\n            if (bool) {\r\n                for (var i = 0; i < this.state.tablaEmer.length; i++) {\r\n                    idper = parseInt(this.state.tablaEmer[i].id);\r\n                    rela = this.state.tablaEmer[i].rela;\r\n\r\n                    const body = { idper, idpac, rela }\r\n\r\n                    \r\n                    await fetch(`http://localhost:5000/emergencias`,\r\n                        {\r\n                            method: \"POST\",\r\n                            headers: { \"Content-Type\": \"application/json\" },\r\n                            body: JSON.stringify(body)\r\n                        });\r\n                }\r\n\r\n\r\n\r\n                await Swal.fire({\r\n                    icon: 'success',\r\n                    title: `Se ha Agregado los Contactos de Emergencia`,\r\n                    showConfirmButton: false,\r\n                    timer: 1750\r\n                })\r\n\r\n                this.cancelarEmer();\r\n                this.componentDidMount();\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Debe Agregar un Email o un Telefono a Todas las Personas.',\r\n                });\r\n            }\r\n\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Debe Agregar Minimo 2 Personas como Contacto de Emergencia.',\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    borrarEmer(x) {\r\n        var arreglo = this.state.tablaEmer;\r\n        var index = null;\r\n        for (var i = 0; i < this.state.tablaEmer.length; i++) {\r\n            if (this.state.tablaEmer[i].nombre === x) {\r\n                index = i;\r\n            }\r\n        }\r\n        arreglo.splice(index, 1);\r\n        this.setState({\r\n            tablaEmer: arreglo\r\n        })\r\n    }\r\n\r\n    // Email Emergencia\r\n\r\n    async emailEmer(idper) {\r\n\r\n        const idPer = parseInt(idper);\r\n\r\n\r\n        await fetch(`http://localhost:5000/email/${idPer}`)\r\n            .then(response => response.json())\r\n            .then((result) => {\r\n                this.setState({\r\n                    emailEmer: result,\r\n                    seleccionada: idPer,\r\n                })\r\n\r\n            });\r\n\r\n        this.modalEmail();\r\n\r\n    }\r\n\r\n    borrarEmaEmer(x) {\r\n\r\n        var arreglo = this.state.emailEmer;\r\n        var index = null;\r\n        var idemail = null;\r\n        for (var i = 0; i < this.state.emailEmer.length; i++) {\r\n            if (this.state.emailEmer[i].email === x) {\r\n                index = i;\r\n                idemail = this.state.emailEmer[i].idemail;\r\n            }\r\n        }\r\n        var algo = this.state.emailEmerB;\r\n        algo.push(arreglo[index])\r\n\r\n        arreglo.splice(index, 1);\r\n\r\n        if (idemail != 0) {\r\n            this.setState({\r\n\r\n                emailEmerB: algo,\r\n                emailEmer: arreglo,\r\n\r\n            })\r\n\r\n        } else {\r\n            this.setState({\r\n                emailEmer: arreglo,\r\n\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n\r\n    async hayemail2(x) {\r\n        var bool = false;\r\n\r\n        await fetch(`http://localhost:5000/emailhay2/${x}`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result.length > 0) {\r\n                    bool = true\r\n                }\r\n            });\r\n\r\n        return bool;\r\n    }\r\n\r\n    async creaEmerEmail() {\r\n\r\n        if (this.state.emailEmer.length > 0) {\r\n\r\n            for (var i = 0; i < this.state.emailEmer.length; i++) {\r\n\r\n                if (this.state.emailEmer[i].idemail === 0) {\r\n                    var email = this.state.emailEmer[i].email;\r\n                    var idpersona = this.state.emailEmer[i].idpersona;\r\n                    const body = { email, idpersona }\r\n\r\n\r\n                    await fetch(`http://localhost:5000/email/`,\r\n                        {\r\n                            method: \"POST\",\r\n                            headers: { \"Content-Type\": \"application/json\" },\r\n                            body: JSON.stringify(body)\r\n                        });\r\n                }\r\n\r\n            } for (var i = 0; i < this.state.emailEmerB.length; i++) {\r\n\r\n\r\n                var email2 = this.state.emailEmerB[i].email;\r\n                var idpersona2 = this.state.emailEmerB[i].idpersona;\r\n\r\n\r\n                await fetch(`http://localhost:5000/emaildel/${idpersona2}/${email2}`,\r\n                    {\r\n                        method: \"DELETE\",\r\n                        headers: { \"Content-Type\": \"application/json\" }\r\n\r\n                    });\r\n\r\n\r\n            }\r\n            await Swal.fire({\r\n                icon: 'success',\r\n                title: `Se han Actualizado los Emails`,\r\n                showConfirmButton: false,\r\n                timer: 1750\r\n            })\r\n            this.cancelarEmail();\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Debe Agregar al Menos 1 Email.',\r\n            });\r\n        }\r\n    }\r\n\r\n    hayaquiemail(x) {\r\n        var bool = false;\r\n        for (var i = 0; i < this.state.emailEmer.length; i++) {\r\n            if (this.state.emailEmer[i].email === x) {\r\n                bool = true;\r\n            }\r\n        }\r\n        return bool;\r\n    }\r\n\r\n    async emerEmailAgre() {\r\n        const emi = this.state.emerEma.trim();\r\n\r\n        if (emi !== '' && emi.includes('@') && (emi.includes('.com') || emi.includes('.co'))) {\r\n            const bool = await this.hayemail2(emi)\r\n            if (!bool && !this.hayaquiemail(emi)) {\r\n                const arreglo = this.state.emailEmer;\r\n                const ema = { idemail: 0, email: emi, idpersona: this.state.seleccionada }\r\n                arreglo.push(ema);\r\n                this.setState({\r\n                    emailEmer: arreglo,\r\n                    emerEma: ''\r\n                })\r\n                document.getElementById('emerEma').value = '';\r\n\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Este Email ya esta Registrado en la Base de Datos.',\r\n                });\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Debe Ingresar un Email Valido.',\r\n            });\r\n        }\r\n    }\r\n\r\n    // Tel Emergencia\r\n\r\n    async telEmer(idper) {\r\n\r\n        await fetch(`http://localhost:5000/telefono/${idper}`)\r\n            .then(response => response.json())\r\n            .then((result) => {\r\n                this.setState({\r\n                    telEmer: result,\r\n                    seleccionada: idper,\r\n                })\r\n            });\r\n        this.modalTel();\r\n    }\r\n\r\n    async creaEmerTel() {\r\n\r\n        if (this.state.telEmer.length > 0) {\r\n\r\n            for (var i = 0; i < this.state.telEmer.length; i++) {\r\n\r\n                if (this.state.telEmer[i].idtelefono === 0) {\r\n                    var telefono = this.state.telEmer[i].telefono;\r\n                    var idpersona = this.state.telEmer[i].idpersona;\r\n                    const body = { telefono, idpersona }\r\n\r\n\r\n                    await fetch(`http://localhost:5000/telefono/`,\r\n                        {\r\n                            method: \"POST\",\r\n                            headers: { \"Content-Type\": \"application/json\" },\r\n                            body: JSON.stringify(body)\r\n                        });\r\n                }\r\n\r\n            } for (var i = 0; i < this.state.telEmerB.length; i++) {\r\n\r\n\r\n                var tel2 = this.state.telEmerB[i].telefono;\r\n                var idpersona2 = this.state.telEmerB[i].idpersona;\r\n                console.log(tel2)\r\n                console.log(idpersona2)\r\n\r\n                await fetch(`http://localhost:5000/teldel/${idpersona2}/${tel2}`,\r\n                    {\r\n                        method: \"DELETE\",\r\n                        headers: { \"Content-Type\": \"application/json\" }\r\n\r\n                    });\r\n\r\n\r\n            }\r\n            await Swal.fire({\r\n                icon: 'success',\r\n                title: `Se han Actualizado los Telefonos`,\r\n                showConfirmButton: false,\r\n                timer: 1750\r\n            })\r\n            this.cancelarTel();\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Debe Agregar al Menos 1 Telefono.',\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    borrarTelEmer(x) {\r\n\r\n        var arreglo = this.state.telEmer;\r\n        var index = null;\r\n        var idtelefono = null;\r\n        for (var i = 0; i < this.state.telEmer.length; i++) {\r\n            if (this.state.telEmer[i].telefono === x) {\r\n                index = i;\r\n                idtelefono = this.state.telEmer[i].idtelefono;\r\n            }\r\n        }\r\n        var algo = this.state.telEmerB;\r\n        algo.push(arreglo[index])\r\n\r\n        arreglo.splice(index, 1);\r\n\r\n        if (idtelefono != 0) {\r\n            this.setState({\r\n\r\n                telEmerB: algo,\r\n                telEmer: arreglo,\r\n\r\n            })\r\n\r\n        } else {\r\n            this.setState({\r\n                telEmer: arreglo,\r\n\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    async telhay2(x) {\r\n        var bool = false;\r\n\r\n        await fetch(`http://localhost:5000/telhay2/${x}`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result.length > 0) {\r\n                    bool = true\r\n                }\r\n            });\r\n\r\n        return bool;\r\n    }\r\n\r\n    hayaquitel(x) {\r\n        var bool = false;\r\n        for (var i = 0; i < this.state.telEmer.length; i++) {\r\n            if (this.state.telEmer[i].telefono === x) {\r\n                bool = true;\r\n            }\r\n        }\r\n        return bool;\r\n    }\r\n\r\n    async emerTelAgre() {\r\n        const tel = this.state.emerTel.trim();\r\n\r\n        if (tel !== '' && (tel.length === 7 || tel.length === 10)) {\r\n            const bool = await this.telhay2(tel)\r\n            if (!bool && !this.hayaquitel(tel)) {\r\n                const arreglo = this.state.telEmer;\r\n                const tele = { idtelefono: 0, telefono: tel, idpersona: this.state.seleccionada }\r\n                arreglo.push(tele);\r\n                this.setState({\r\n                    telEmer: arreglo,\r\n                    emerTel: ''\r\n                })\r\n\r\n                document.getElementById('emerTel').value = '';\r\n\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Este Telefono ya esta Registrado en la Base de Datos.',\r\n                });\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Debe Ingresar un Telefono Valido.',\r\n            });\r\n        }\r\n    }\r\n\r\n    async tieneAlMenosUno(idper) {\r\n        let email = await fetch(`http://localhost:5000/email/${idper}`).then(response => response.json())\r\n        let tele = await fetch(`http://localhost:5000/telefono/${idper}`).then(response => response.json())\r\n        console.log(email)\r\n        console.log(tele)\r\n        if (email.length > 0 || tele.length > 0) {\r\n            return true\r\n        }\r\n        return false\r\n\r\n    }\r\n\r\n\r\n\r\n    // Validaciones y Modals\r\n\r\n    async validaM(x) {\r\n\r\n        const index = document.getElementById('persona').selectedIndex - 1;\r\n\r\n        if (index >= 0) {\r\n            await this.hayDoctor();\r\n            await this.hayPaciente();\r\n\r\n            if (x === 'P') {\r\n                if (!this.state.haypac) {\r\n                    this.modalPaciente();\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: 'Esta Persona ya es un Paciente.',\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (!this.state.haydoc) {\r\n                    this.modalDoctor();\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: 'Esta Persona ya es un Doctor.',\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Seleccione una Persona.',\r\n            })\r\n        }\r\n    }\r\n\r\n    async validaActuD(x) {\r\n        const index = document.getElementById('docSelec').selectedIndex - 1;\r\n\r\n        if (index >= 0 && x === 'A') {\r\n            await this.cargarDatosActuDoc();\r\n            this.modalActuD();\r\n            document.getElementById('tipoD_AD').value = this.state.tipoD_AD;\r\n            document.getElementById('barrioAD').value = this.state.barrioAD;\r\n            document.getElementById('epsAD').value = this.state.epsAD;\r\n            document.getElementById('uniAD').value = this.state.uniAD;\r\n            document.getElementById('fechaAD').value = this.state.fechaAD;\r\n            document.getElementById('viaPD').value = this.state.viaPD;\r\n            if (this.state.tipoInmD !== null) {\r\n                document.getElementById('tipoInmD').value = this.state.tipoInmD;\r\n            }\r\n            if (this.state.bloqueIntD !== null) {\r\n                document.getElementById('bloqueIntD').value = this.state.bloqueIntD;\r\n            }\r\n\r\n        }\r\n        else if (index >= 0 && x === 'D') {\r\n            this.borrarDoctor();\r\n        }\r\n        else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Seleccione un Doctor.',\r\n            })\r\n        }\r\n    }\r\n\r\n    validaInmBlo() {\r\n        const tipoInm = document.getElementById('tipoInmD').selectedIndex;\r\n        const comTipoInm = document.getElementById('comTipoInmD').value;\r\n        const bloqueInt = document.getElementById('bloqueIntD').selectedIndex;\r\n        const comBloqueInt = document.getElementById('comBloqueIntD').value;\r\n\r\n        if (tipoInm === 0 && comTipoInm === '') {\r\n            if (bloqueInt === 0 && comBloqueInt === '') {\r\n                return true\r\n            }\r\n            else if (bloqueInt !== 0 && comBloqueInt !== '') {\r\n                return true\r\n            }\r\n        }\r\n        else if (tipoInm !== 0 && comTipoInm !== '') {\r\n            if (bloqueInt === 0 && comBloqueInt === '') {\r\n                return true\r\n            }\r\n            else if (bloqueInt !== 0 && comBloqueInt !== '') {\r\n                return true\r\n            }\r\n        } else {\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n    // Valida Actu campos\r\n\r\n    superValidacionActuDoc() {\r\n        const nom = document.getElementById('nombreAD').value.trim();\r\n        const apell = document.getElementById('apellidoAD').value.trim();\r\n        const tipod = document.getElementById('tipoD_AD').selectedIndex;\r\n        const doc = document.getElementById('idenAD').value.trim();\r\n        const barr = document.getElementById('barrioAD').selectedIndex;\r\n        const fecha = document.getElementById('fechaAD').value;\r\n        const uni = document.getElementById('uniAD').selectedIndex;\r\n        const eps = document.getElementById('epsAD').selectedIndex;\r\n        const viaP = document.getElementById('viaPD').selectedIndex;\r\n        const numViaP = document.getElementById('numViaPD').value;\r\n        const numViaS = document.getElementById('numViaSD').value;\r\n        const numCasa = document.getElementById('numCasaD').value;\r\n\r\n        var ft = new Date(fecha)\r\n        ft.setDate(ft.getDate() + 1);\r\n        if (nom !== \"\" && nom.length <= 20) {\r\n            document.getElementById('snombreAD').style.display = 'none';\r\n            if (apell !== \"\" && apell.length <= 30) {\r\n                document.getElementById('sapellidoAD').style.display = 'none';\r\n                if (tipod !== 0) {\r\n                    document.getElementById('stipoD_AD').style.display = 'none';\r\n                    if (doc !== \"\" && doc.length <= 30) {\r\n                        document.getElementById('sidenAD').style.display = 'none';\r\n                        if (barr !== 0) {\r\n                            document.getElementById('sbarrioAD').style.display = 'none';\r\n                            if (ft <= new Date()) {\r\n                                document.getElementById('sfechaAD').style.display = 'none';\r\n                                if (uni !== 0) {\r\n                                    document.getElementById('suniAD').style.display = 'none';\r\n                                    if (eps !== 0) {\r\n                                        document.getElementById('sepsAD').style.display = 'none';\r\n                                        if (viaP !== 0 && numViaP !== '' && numViaS !== '' && numCasa !== '') {\r\n                                            document.getElementById('sdireccion').style.display = 'none';\r\n                                            if (this.validaInmBlo()) {\r\n                                                document.getElementById('sinm').style.display = 'none';\r\n                                                this.actuDoc();\r\n                                            } else {\r\n                                                document.getElementById('sinm').style.display = 'contents';\r\n                                            }\r\n                                        } else {\r\n                                            document.getElementById('sdireccion').style.display = 'contents';\r\n                                        }\r\n\r\n                                    } else {\r\n                                        document.getElementById('sepsAD').style.display = 'contents';\r\n                                    }\r\n                                } else {\r\n                                    document.getElementById('suniAD').style.display = 'contents';\r\n                                }\r\n                            } else {\r\n                                document.getElementById('sfechaAD').style.display = 'contents';\r\n                            }\r\n\r\n                        } else {\r\n                            document.getElementById('sbarrioAD').style.display = 'contents';\r\n                        }\r\n                    } else {\r\n                        document.getElementById('sidenAD').style.display = 'contents';\r\n                    }\r\n                } else {\r\n                    document.getElementById('stipoD_AD').style.display = 'contents';\r\n                }\r\n            } else {\r\n                document.getElementById('sapellidoAD').style.display = 'contents';\r\n            }\r\n        } else {\r\n            document.getElementById('snombreAD').style.display = 'contents';\r\n        }\r\n    }\r\n\r\n\r\n    //Validacion Paciente Campos\r\n\r\n    validaPaci() {\r\n        const numIP = document.getElementById('numIP').value.trim();\r\n        const geoPLA = document.getElementById('geoPLA').value.trim();\r\n        const geoPLO = document.getElementById('geoPLO').value.trim();\r\n        const docSelP = document.getElementById('docSelP').selectedIndex;\r\n        const ciudadP = document.getElementById('ciudadP').selectedIndex;\r\n\r\n        if (numIP !== '') {\r\n            document.getElementById('snumIP').style.display = 'none';\r\n            if (geoPLA !== '' && geoPLO !== '') {\r\n                document.getElementById('sgeo').style.display = 'none';\r\n                if (docSelP !== 0) {\r\n                    document.getElementById('sdocSelP').style.display = 'none';\r\n                    if (ciudadP !== 0) {\r\n                        document.getElementById('sciudadP').style.display = 'none';\r\n                        this.crearPac();\r\n                    } else {\r\n                        document.getElementById('sciudadP').style.display = 'contents';\r\n                    }\r\n                } else {\r\n                    document.getElementById('sdocSelP').style.display = 'contents';\r\n                }\r\n            } else {\r\n                document.getElementById('sgeo').style.display = 'contents';\r\n            }\r\n        } else {\r\n            document.getElementById('snumIP').style.display = 'contents';\r\n        }\r\n    }\r\n\r\n\r\n    modalPaciente() {\r\n\r\n        this.setState({\r\n            modalInserP: !this.state.modalInserP\r\n        });\r\n\r\n    }\r\n    modalParen() {\r\n\r\n        this.setState({\r\n            modalParen: !this.state.modalParen\r\n        });\r\n\r\n    }\r\n    modalEmergencia() {\r\n        this.setState({\r\n            modalEmer: !this.state.modalEmer\r\n        });\r\n    }\r\n    modalTel() {\r\n        this.setState({\r\n            modalTel: !this.state.modalTel\r\n        });\r\n    }\r\n    modalEmail() {\r\n        this.setState({\r\n            modalEmail: !this.state.modalEmail\r\n        });\r\n    }\r\n\r\n    cancelarTel() {\r\n        this.modalTel();\r\n        this.setState({\r\n            telEmer: [],\r\n            telEmerB: [],\r\n            seleccionada: null,\r\n            emerTel: '',\r\n        });\r\n    }\r\n    cancelarEmail() {\r\n        this.modalEmail();\r\n        this.setState({\r\n            emailEmer: [],\r\n            emailEmerB: [],\r\n            seleccionada: null,\r\n            emerEma: '',\r\n        });\r\n    }\r\n\r\n    cancelarEmer() {\r\n        this.modalEmergencia();\r\n        this.setState({\r\n            emer: null,\r\n            perEmer: null,\r\n            tablaEmer: [],\r\n            telEmer: [],\r\n            emailEmer: [],\r\n        })\r\n\r\n    }\r\n    modalDoctor() {\r\n        this.setState({\r\n            modalInserD: !this.state.modalInserD\r\n        });\r\n    }\r\n\r\n    modalActuD() {\r\n        this.setState({\r\n            modalActuD: !this.state.modalActuD\r\n        });\r\n    }\r\n    cancelarParen() {\r\n        this.modalParen();\r\n        this.setState({\r\n            paren: null,\r\n            perParen: null,\r\n            tablaParen: [],\r\n        })\r\n\r\n    }\r\n    cancelarActuD() {\r\n        this.modalActuD();\r\n        this.setState({\r\n            nombreAD: '',\r\n            apellido: '',\r\n            tipoD_AD: null,\r\n            idenAD: '',\r\n            barrioAD: null,\r\n            fechaAD: null,\r\n            emailAD: [],\r\n            telAD: [],\r\n            uniAD: null,\r\n            epsAD: null,\r\n            idPerDoc: null,\r\n            emailBAD: [],\r\n            hayEmail: false,\r\n            viaPD: null,\r\n            numViaPD: '',\r\n            numViaSD: '',\r\n            numCasaD: '',\r\n            tipoInmD: null,\r\n            comTipoInmD: '',\r\n            bloqueIntD: null,\r\n            comBloqueIntD: '',\r\n            idDirecDoc: null,\r\n\r\n        })\r\n    }\r\n\r\n    async recargarP() {\r\n\r\n        await fetch('http://localhost:5000/persona/')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        personas: result\r\n                    });\r\n\r\n                }\r\n            )\r\n    }\r\n\r\n    cancelarP() {\r\n        this.modalPaciente();\r\n        this.setState({\r\n            numIP: null,\r\n            geoPLA: '',\r\n            geoPLO: '',\r\n            docSelP: null,\r\n            ciudadP: null,\r\n        })\r\n    }\r\n    cancelarD() {\r\n\r\n        this.setState({ universidad: '' })\r\n        this.setState({ eps: '' })\r\n        this.modalDoctor();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"total\">\r\n                    <div className=\"header mt-2 text-center \" id=\"login\"><h2 className=\"Titulo m-2 \" >Crear Doctor o Paciente</h2></div>\r\n                    <div className=\"conteneT pt-1 mt-3\">\r\n                        <div className=\"conteneA mt-3\">\r\n                            <div className=\"mt-3\" >\r\n\r\n                                <Form className=\"contenido pt-3 mt-3 \" >\r\n\r\n                                    <div className=\"form pt-2 mt-2 mb-2 \"  >\r\n                                        <h4 className=\"ml-3 mr-3 mt-3 font-weight-bold\">Crear</h4>\r\n                                        <Label className=\"mt-4 font-weight-bold\">Seleccione la Persona de la base de datos :</Label>\r\n\r\n                                        <FormGroup className=\"selP ml-3 mr-3 mt-2 mb-3\" >\r\n                                            <InputGroup>\r\n\r\n                                                <Input className=\"mt-4\" id=\"persona\"\r\n\r\n                                                    className=\"form-control\"\r\n                                                    name=\"persona\"\r\n                                                    type=\"select\"\r\n                                                    bsSize=\"md\"\r\n\r\n                                                    onChange={this.handleChange} >\r\n                                                    <option selected=\"true\" disabled=\"disabled\">Personas</option>\r\n                                                    {this.state.personas.map(per => (\r\n                                                        <option value={per.idpersona}>\r\n                                                            {per.nombre}  {per.apellido} - {per.numerodoc}\r\n                                                        </option>\r\n                                                    ))}\r\n\r\n                                                </Input>\r\n                                                <InputGroupAddon addonType=\"prepend\" className=''>\r\n                                                    <Button color=\"primary\" onClick={() => this.recargarP()} ><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></Button>\r\n\r\n                                                </InputGroupAddon>\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n\r\n                                        <div className=\"footer mt-3 mb-4\">\r\n                                            <Button className=\"mb-3 mr-2\" size=\"lg\" color='primary' onClick={() => this.validaM('P')} >\r\n                                                Crear Paciente <i class=\"fa fa-user-circle-o\" aria-hidden=\"true\"></i>\r\n                                            </Button>\r\n                                            <Button className=\"mb-3\" size=\"lg\" color='primary' onClick={() => this.validaM('D')} >\r\n                                                Crear Doctor <i class=\"fa fa-user-md\" aria-hidden=\"true\"></i>\r\n                                            </Button>\r\n                                            <CrearPersona className=\"mb-4\" />\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </Form>\r\n                            </div>\r\n                            <div className=\"formD mt-4 \">\r\n                                <div className=\"inputsFA mb-4\">\r\n                                    <h4 className=\"ml-3 mr-3 mt-4 mb-3 font-weight-bold\">Actualizar o Borrar</h4>\r\n\r\n                                    <FormGroup className=\"selP inputF mb-3 ml-3 mr-3 mt-3 \">\r\n                                        <Label className=\"font-weight-bold\"> Lista de Pacientes: </Label>\r\n                                        <InputGroup>\r\n                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                <ButtonGroup>\r\n                                                    <Button color=\"primary\" ><i class=\"fa fa-wrench\" /></Button>\r\n                                                    <Button color=\"primary\" ><i class=\"fa fa-trash-o \" /></Button>\r\n                                                </ButtonGroup>\r\n                                            </InputGroupAddon>\r\n                                            <Input id=\"selecpa\"\r\n\r\n                                                className=\"form-control\"\r\n                                                name=\"selecpa\"\r\n                                                type=\"select\"\r\n                                                bsSize=\"md\"\r\n\r\n                                                selectedIndex={this.state.selecpa}\r\n                                            >\r\n                                                <option selected=\"true\" disabled=\"disabled\">Pacientes</option>\r\n                                                {this.state.listPac.map(pac => (\r\n                                                    <option value={pac.idpaciente}>\r\n                                                        {pac.nombre} {pac.apellido} - {pac.numerodoc}\r\n                                                    </option>\r\n                                                ))}\r\n\r\n\r\n\r\n                                            </Input>\r\n                                        </InputGroup>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"selP inputF mb-3 ml-3 mr-3 mt-3 \">\r\n                                        <Label className=\"font-weight-bold\"> Lista de Doctores: </Label>\r\n                                        <InputGroup>\r\n\r\n                                            <Input id=\"docSelec\"\r\n\r\n                                                className=\"form-control\"\r\n                                                name=\"docSelec\"\r\n                                                type=\"select\"\r\n                                                bsSize=\"md\"\r\n\r\n                                                selectedIndex={this.state.selecdoc}\r\n                                            >\r\n                                                <option selected=\"true\" disabled=\"disabled\">Doctores</option>\r\n                                                {this.state.listDoc.map(doc => (\r\n                                                    <option value={doc.iddoctor}>\r\n                                                        {doc.nombre} {doc.apellido} - {doc.numerodoc}\r\n                                                    </option>\r\n                                                ))}\r\n\r\n                                            </Input>\r\n\r\n                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                <ButtonGroup>\r\n                                                    <Button color=\"primary\" onClick={() => this.validaActuD('A')}><i class=\"fa fa-wrench\" /></Button>\r\n                                                    <Button color=\"primary\" onClick={() => this.validaActuD('D')}><i class=\"fa fa-trash-o \" /></Button>\r\n                                                </ButtonGroup>\r\n                                            </InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </FormGroup>\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Modal Crear Paciente */}\r\n                <Modal\r\n                    size=\"md\"\r\n                    centered isOpen={this.state.modalInserP} id=\"insertar\">\r\n                    <ModalHeader>\r\n                        <div><h3>Crear Paciente</h3></div>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n\r\n                        <Form>\r\n                            <div id=\"regisM\" className=\"contRegisM\">\r\n                                <div className=\"mb-3\">\r\n                                    <FormGroup  >\r\n                                        <Input id=\"numIP\"\r\n                                            placeholder=\"Num Integrantes\"\r\n                                            className=\"form-control\"\r\n                                            name=\"numIP\"\r\n                                            bsSize=\"md\"\r\n                                            type=\"number\"\r\n                                            value={this.state.numIP}\r\n                                            onChange={this.handleChange} />\r\n                                    </FormGroup>\r\n                                    <span className=\"span\" id=\"snumIP\">Debe Ingresar un # de Integrantes</span>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <FormGroup  >\r\n                                        <Label className=\"font-weight-bold\">Geolocalización</Label>\r\n                                        <InputGroup>\r\n                                            <Input id=\"geoPLA\"\r\n                                                placeholder=\"Latitud\"\r\n                                                className=\"form-control mr-1\"\r\n                                                name=\"geoPLA\"\r\n                                                bsSize=\"md\"\r\n                                                type=\"text\"\r\n                                                value={this.state.geoPLA}\r\n                                                onChange={this.handleChange} />\r\n\r\n                                            <Input id=\"geoPLO\"\r\n                                                placeholder=\"Longitud\"\r\n                                                className=\"form-control\"\r\n                                                name=\"geoPLO\"\r\n                                                bsSize=\"md\"\r\n                                                type=\"text\"\r\n                                                value={this.state.geoPLO}\r\n                                                onChange={this.handleChange} />\r\n                                        </InputGroup>\r\n                                    </FormGroup>\r\n                                    <p>Si no Conoce la Geolocalización <a href='https://www.google.com.co/maps/place/Cali,+Valle+del+Cauca/@3.395397,-76.6657539,11z/data=!3m1!4b1!4m5!3m4!1s0x8e30a6f0cc4bb3f1:0x1f0fb5e952ae6168!8m2!3d3.4516467!4d-76.5319854?hl=es&authuser=0' target='_blank' >Google Maps</a></p>\r\n                                    <span className=\"span\" id=\"sgeo\">Debe Ingresar La Latitud y la Longitud</span>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <FormGroup className=\"\">\r\n                                        <Label className=\"font-weight-bold\"> Lista de Doctores: </Label>\r\n\r\n                                        <Input id=\"docSelP\"\r\n\r\n                                            className=\"form-control\"\r\n                                            name=\"docSelP\"\r\n                                            type=\"select\"\r\n                                            bsSize=\"md\"\r\n                                            value={this.state.docSelP}\r\n                                            onChange={this.handleChange}\r\n\r\n                                        >\r\n                                            <option selected=\"true\" disabled=\"disabled\">Doctores</option>\r\n                                            {this.state.listDoc.map(doc => (\r\n                                                <option value={doc.iddoctor}>\r\n                                                    {doc.nombre} {doc.apellido} - {doc.numerodoc}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                    </FormGroup>\r\n                                    <span className=\"span\" id=\"sdocSelP\">Debe Seleccionar un Doctor</span>\r\n                                </div>\r\n\r\n                                <div className=\"mb-3\">\r\n                                    <FormGroup className=\"\">\r\n                                        <Label className=\"font-weight-bold\"> Ciudad de Contagio: </Label>\r\n\r\n                                        <Input id=\"ciudadP\"\r\n\r\n                                            className=\"form-control\"\r\n                                            name=\"ciudadP\"\r\n                                            type=\"select\"\r\n                                            bsSize=\"md\"\r\n                                            value={this.state.ciudadP}\r\n                                            onChange={this.handleChange}\r\n\r\n                                        >\r\n                                            <option selected=\"true\" disabled=\"disabled\">Ciudades</option>\r\n                                            {this.state.selCiudades.map(ciu => (\r\n                                                <option value={ciu.idciudad}>\r\n                                                    {ciu.ciudad}\r\n                                                </option>\r\n                                            ))}\r\n\r\n\r\n                                        </Input>\r\n                                    </FormGroup>\r\n                                    <span className=\"span\" id=\"sciudadP\">Debe Seleccionar una Ciudad</span>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter >\r\n                        <Button color=\"success\" onClick={() => this.validaPaci()} >Crear</Button>\r\n                        <Button color=\"danger\" onClick={() => this.cancelarP()}>Cancelar</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n\r\n                {/* Modal Crear Doctor */}\r\n                <Modal\r\n                    size=\"md\"\r\n                    centered isOpen={this.state.modalInserD} id=\"insertar\">\r\n                    <ModalHeader>\r\n                        <div><h3>Crear Doctor</h3></div>\r\n                    </ModalHeader>\r\n                    <Form>\r\n                        <ModalBody>\r\n\r\n                            <FormGroup className=\" mb-3 ml-3 mr-3 mt-3 \">\r\n                                <Label className=\"font-weight-bold\"> Universidad: </Label>\r\n                                <InputGroup>\r\n\r\n                                    <Input id=\"universidad\"\r\n\r\n                                        className=\"form-control\"\r\n                                        name=\"universidad\"\r\n                                        type=\"select\"\r\n                                        bsSize=\"md\"\r\n                                        onChange={this.handleChange}\r\n\r\n                                    >\r\n                                        <option selected=\"true\" disabled=\"disabled\">Universidad</option>\r\n                                        {this.state.universidades.map(uni => (\r\n                                            <option value={uni.iduniversidad}>\r\n                                                {uni.nombreuni}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            <FormGroup className=\" mb-3 ml-3 mr-3 mt-3 \">\r\n                                <Label className=\"font-weight-bold\"> Eps: </Label>\r\n                                <InputGroup>\r\n\r\n                                    <Input id=\"eps\"\r\n\r\n                                        className=\"form-control\"\r\n                                        name=\"eps\"\r\n                                        type=\"select\"\r\n                                        bsSize=\"md\"\r\n                                        onChange={this.handleChange}\r\n                                        selectedIndex={this.state.eps}\r\n                                    >\r\n                                        <option selected=\"true\" disabled=\"disabled\">Eps</option>\r\n                                        {this.state.epss.map(ep => (\r\n                                            <option value={ep.ideps}>\r\n                                                {ep.nombreeps}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n\r\n                        </ModalBody>\r\n                        <ModalFooter >\r\n                            <Button color=\"success\" onClick={() => this.crearDoctor()} >Crear Doctor</Button>\r\n                            <Button color=\"danger\" onClick={() => this.cancelarD()}>Cancelar</Button>\r\n                        </ModalFooter>\r\n                    </Form>\r\n                </Modal>\r\n\r\n                {/* Modal Actu Doc */}\r\n\r\n                <Modal\r\n                    size=\"md\"\r\n                    centered isOpen={this.state.modalActuD} id=\"insertar\">\r\n                    <ModalHeader>\r\n                        <div><h3>Actualizar Doctor</h3></div>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <div id=\"regisM\" className=\"contRegisM\">\r\n                                <div className=\"mb-3\">\r\n                                    <FormGroup  >\r\n                                        <Input id=\"nombreAD\"\r\n                                            placeholder=\"Nombre\"\r\n                                            className=\"form-control\"\r\n                                            name=\"nombreAD\"\r\n                                            bsSize=\"md\"\r\n                                            type=\"text\"\r\n                                            value={this.state.nombreAD}\r\n                                            onChange={this.handleChange} />\r\n                                    </FormGroup>\r\n                                    <span className=\"span\" id=\"snombreAD\">Debe Ingresar un Nombre</span>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <FormGroup  >\r\n\r\n                                        <Input id=\"apellidoAD\"\r\n                                            placeholder=\"Apellido\"\r\n                                            className=\"form-control\"\r\n                                            name=\"apellidoAD\"\r\n                                            type=\"text\"\r\n                                            bsSize=\"md\"\r\n                                            value={this.state.apellidoAD}\r\n                                            onChange={this.handleChange} />\r\n                                    </FormGroup>\r\n                                    <span className=\"span\" id=\"sapellidoAD\">Debe Ingresar un Apellido</span>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <FormGroup  >\r\n                                        <Input id=\"tipoD_AD\"\r\n                                            className=\"form-control\"\r\n                                            name=\"tipoD_AD\"\r\n                                            type=\"select\"\r\n                                            bsSize=\"md\"\r\n                                            onChange={this.handleChange}>\r\n                                            <option selected=\"true\" disabled=\"disabled\">Tipo de Documento</option>\r\n\r\n                                            {this.state.tiposDOC.map(tipo => (\r\n\r\n                                                <option value={tipo.idtipo}>\r\n                                                    {tipo.tipodocument}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Input>\r\n                                    </FormGroup>\r\n                                    <span className=\"span\" id=\"stipoD_AD\">Seleccione un Tipo de Documento valido</span>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <FormGroup  >\r\n\r\n                                        <Input id=\"idenAD\"\r\n                                            placeholder=\"Identificación\"\r\n                                            className=\"form-control\"\r\n                                            name=\"idenAD\"\r\n                                            type=\"text\"\r\n                                            bsSize=\"md\"\r\n                                            value={this.state.idenAD}\r\n                                            onChange={this.handleChange} />\r\n                                    </FormGroup>\r\n                                    <span className=\"span\" id=\"sidenAD\">Debe Ingresar una Identificación Valida</span>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <FormGroup  >\r\n                                        <Input id=\"barrioAD\"\r\n                                            placeholder=\"Barrio\"\r\n                                            className=\"form-control\"\r\n                                            name=\"barrioAD\"\r\n                                            type=\"select\"\r\n                                            bsSize=\"md\"\r\n                                            selectedIndex={this.state.barrioAD}\r\n                                            onChange={this.handleChange}>\r\n                                            <option selected=\"true\" disabled=\"disabled\">Barrios</option>\r\n                                            {this.state.barrios.map(bar => (\r\n                                                <option value={bar.id_barrio}>\r\n                                                    {bar.nombre}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Input>\r\n                                    </FormGroup>\r\n                                    <span className=\"span\" id=\"sbarrioAD\">Seleccione un Barrio</span>\r\n                                </div>\r\n\r\n                                <div className=\"mb-3\" >\r\n                                    <FormGroup  >\r\n                                        <div className=\"mensaje\">\r\n                                            <p className=\"oculto\">Fecha de Nacimiento</p>\r\n                                            <Input\r\n                                                id=\"fechaAD\"\r\n                                                placeholder=\"date placeholder\"\r\n                                                className=\"form-control\"\r\n                                                name=\"fechaAD\"\r\n                                                bsSize=\"md\"\r\n                                                type=\"date\"\r\n                                                value={this.state.fechaN}\r\n                                                onChange={this.handleChange}\r\n                                            /> </div></FormGroup>\r\n                                    <span className=\"span\" id=\"sfechaAD\">Debe Ingresar una Fecha Valida</span>\r\n                                </div>\r\n                                <div>\r\n                                    <FormGroup className=\" mb-3   mt-3 \">\r\n\r\n                                        <InputGroup>\r\n\r\n                                            <Input id=\"uniAD\"\r\n\r\n                                                className=\"form-control\"\r\n                                                name=\"uniAD\"\r\n                                                type=\"select\"\r\n                                                bsSize=\"md\"\r\n                                                onChange={this.handleChange}\r\n\r\n                                            >\r\n                                                <option selected=\"true\" disabled=\"disabled\">Universidad</option>\r\n                                                {this.state.universidades.map(uni => (\r\n                                                    <option value={uni.iduniversidad}>\r\n                                                        {uni.nombreuni}\r\n                                                    </option>\r\n                                                ))}\r\n\r\n                                            </Input>\r\n                                        </InputGroup>\r\n                                    </FormGroup>\r\n                                    <span className=\"span\" id=\"suniAD\">Seleccione una Universidad</span>\r\n                                </div>\r\n                                <div>\r\n                                    <FormGroup className=\" mb-3  mt-3 \">\r\n\r\n                                        <InputGroup>\r\n\r\n                                            <Input id=\"epsAD\"\r\n\r\n                                                className=\"form-control\"\r\n                                                name=\"epsAD\"\r\n                                                type=\"select\"\r\n                                                bsSize=\"md\"\r\n                                                onChange={this.handleChange}\r\n                                                selectedIndex={this.state.epsAD}\r\n                                            >\r\n                                                <option selected=\"true\" disabled=\"disabled\">Eps</option>\r\n                                                {this.state.epss.map(ep => (\r\n                                                    <option value={ep.ideps}>\r\n                                                        {ep.nombreeps}\r\n                                                    </option>\r\n                                                ))}\r\n\r\n                                            </Input>\r\n                                        </InputGroup>\r\n                                    </FormGroup>\r\n                                    <span className=\"span\" id=\"sepsAD\">Seleccione una Entidad de Salud</span>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <FormGroup  >\r\n                                        <div className=\"mensajeD\">\r\n                                            <p className=\"ocultoD\">Dirección</p>\r\n                                            <InputGroup>\r\n                                                <InputGroupAddon addonType=\"prepend\">\r\n                                                    <Input id=\"viaPD\"\r\n\r\n                                                        className=\"form-control bg-primary  text-white font-weight-bold\"\r\n                                                        name=\"viaPD\"\r\n                                                        type=\"select\"\r\n                                                        bsSize=\"md\"\r\n                                                        selectedIndex={this.state.viaPD}\r\n                                                        onChange={this.handleChange}>\r\n                                                        <option selected=\"true\" disabled=\"disabled\">Via Principal</option>\r\n                                                        {this.state.selViaP.map(via => (\r\n                                                            <option value={via.idviaprincipal}>\r\n                                                                {via.nombrevia}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                </InputGroupAddon>\r\n                                                <Input id=\"numViaPD\"\r\n\r\n                                                    className=\"form-control\"\r\n                                                    name=\"numViaPD\"\r\n                                                    type=\"text\"\r\n                                                    bsSize=\"md\"\r\n                                                    value={this.state.numViaPD}\r\n                                                    onChange={this.handleChange} />\r\n                                                <h4 className='ml-1 mr-1 mt-1'> # </h4>\r\n                                                <Input id=\"numViaSD\"\r\n\r\n                                                    className=\"form-control\"\r\n                                                    name=\"numViaSD\"\r\n                                                    type=\"text\"\r\n                                                    bsSize=\"md\"\r\n                                                    value={this.state.numViaSD}\r\n                                                    onChange={this.handleChange} />\r\n                                                <h4 className='ml-1 mr-1 mt-1'> -  </h4>\r\n                                                <Input id=\"numCasaD\"\r\n\r\n                                                    className=\"form-control\"\r\n                                                    name=\"numCasaD\"\r\n                                                    type=\"text\"\r\n                                                    bsSize=\"md\"\r\n                                                    value={this.state.numCasaD}\r\n                                                    onChange={this.handleChange} />\r\n                                            </InputGroup>\r\n                                        </div>\r\n                                    </FormGroup>\r\n                                    <span className=\"span\" id=\"sdireccion\">Debe Ingresar una Direccion Valida</span>\r\n                                </div>\r\n                                <div className=\"mb-3\" >\r\n                                    <FormGroup >\r\n                                        <InputGroup>\r\n                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                <Input\r\n                                                    id=\"tipoInmD\"\r\n                                                    type=\"select\"\r\n\r\n                                                    className=\"form-control bg-primary  text-white font-weight-bold\"\r\n                                                    name=\"tipoInmD\"\r\n                                                    bsSize=\"md\"\r\n                                                    selectedIndex={this.state.tipoInmD}\r\n                                                    onChange={this.handleChange}\r\n                                                >\r\n                                                    <option>Tipo de Inmueble</option>\r\n                                                    {this.state.selTipoInm.map(inm => (\r\n                                                        <option value={inm.idtipoinmueble}>\r\n                                                            {inm.nombreinmueble}\r\n                                                        </option>\r\n                                                    ))}\r\n\r\n                                                </Input>\r\n                                            </InputGroupAddon>\r\n                                            <Input id=\"comTipoInmD\"\r\n                                                placeholder='Num'\r\n                                                className=\"form-control\"\r\n                                                name=\"comTipoInmD\"\r\n                                                type=\"text\"\r\n                                                bsSize=\"md\"\r\n                                                value={this.state.comTipoInmD}\r\n                                                onChange={this.handleChange} />\r\n\r\n                                        </InputGroup>\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"mb-3\" >\r\n                                    <FormGroup >\r\n                                        <InputGroup>\r\n                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                <Input\r\n                                                    id=\"bloqueIntD\"\r\n                                                    type=\"select\"\r\n\r\n                                                    className=\"form-control bg-primary  text-white font-weight-bold\"\r\n                                                    name=\"bloqueIntD\"\r\n                                                    bsSize=\"md\"\r\n                                                    selectedIndex={this.state.bloqueIntD}\r\n                                                    onChange={this.handleChange}\r\n\r\n                                                >\r\n                                                    <option>Bloque o Interior</option>\r\n                                                    {this.state.selBloqueInt.map(blo => (\r\n                                                        <option value={blo.idbloqueinterior}>\r\n                                                            {blo.nombrebloqueoint}\r\n                                                        </option>\r\n                                                    ))}\r\n\r\n                                                </Input>\r\n                                            </InputGroupAddon>\r\n                                            <Input id=\"comBloqueIntD\"\r\n                                                placeholder='Num'\r\n                                                className=\"form-control\"\r\n                                                name=\"comBloqueIntD\"\r\n                                                type=\"text\"\r\n                                                bsSize=\"md\"\r\n                                                value={this.state.comBloqueIntD}\r\n                                                onChange={this.handleChange} />\r\n                                        </InputGroup>\r\n                                    </FormGroup>\r\n                                    <span className=\"span\" id=\"sinm\">No debe dejar Campos Incompletos</span>\r\n                                </div>\r\n                                <div className=\"mb-3\" >\r\n                                    <FormGroup >\r\n                                        <InputGroup>\r\n                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                <ButtonGroup>\r\n                                                    <Button color=\"primary\" onClick={() => this.agregarEmail('D')}><i class=\"fa fa-plus\" /></Button>\r\n                                                    <Button color=\"primary\" onClick={() => this.borrarEmailAD()}><i class=\"fa fa-minus\" /></Button>\r\n                                                </ButtonGroup>\r\n                                            </InputGroupAddon>\r\n                                            <Input\r\n                                                id=\"emailAD\"\r\n                                                type=\"select\"\r\n                                                placeholder=\"Email\"\r\n                                                className=\"form-control\"\r\n                                                name=\"emailAD\"\r\n                                                bsSize=\"md\"\r\n\r\n                                            >\r\n                                                <option>Email</option>\r\n                                                {this.state.emailAD.map(mail => (\r\n                                                    <option >\r\n                                                        {mail}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                        </InputGroup>\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"mb-3\" >\r\n                                    <FormGroup >\r\n                                        <InputGroup>\r\n                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                <ButtonGroup>\r\n                                                    <Button color=\"primary\" onClick={() => this.agregarTel('D')}><i class=\"fa fa-plus\" /></Button>\r\n                                                    <Button color=\"primary\" onClick={() => this.borrarTelAD()}><i class=\"fa fa-minus\" /></Button>\r\n                                                </ButtonGroup>\r\n                                            </InputGroupAddon>\r\n                                            <Input\r\n                                                id=\"telAD\"\r\n                                                placeholder=\"Telefono\"\r\n                                                className=\"form-control\"\r\n                                                name=\"telAD\"\r\n                                                bsSize=\"md\"\r\n                                                type=\"select\">\r\n\r\n                                                <option>Telefonos</option>\r\n                                                {this.state.telAD.map(tel => (\r\n                                                    <option >\r\n                                                        {tel}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                        </InputGroup>\r\n                                    </FormGroup>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter >\r\n                        <Button color=\"success\" onClick={() => this.superValidacionActuDoc()} >Actualizar</Button>\r\n                        <Button color=\"danger\" onClick={() => this.cancelarActuD()}>Cancelar</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                {/* Modal Parentesco */}\r\n\r\n                <Modal\r\n                    size=\"lg\"\r\n                    centered isOpen={this.state.modalParen} id=\"insertar\">\r\n                    <ModalHeader>\r\n                        <div><h3>Crear Parentesco</h3></div>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"mb-3\" style={{ width: '70%', float: 'left' }} >\r\n                            <FormGroup >\r\n                                <InputGroup>\r\n                                    <InputGroupAddon addonType=\"prepend\" className=''>\r\n                                        <Button color=\"primary\" onClick={() => this.recargarP()} ><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></Button>\r\n\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        id=\"perParen\"\r\n\r\n                                        className=\"form-control\"\r\n                                        name=\"perParen\"\r\n                                        bsSize=\"md\"\r\n                                        type=\"select\"\r\n                                        value={this.state.perParen}\r\n                                        onChange={this.handleChange}>\r\n\r\n                                        <option selected=\"true\" disabled=\"disabled\">Personas</option>\r\n                                        {this.state.personas.map(per => (\r\n                                            <option value={per.idpersona}>\r\n                                                {per.nombre}  {per.apellido} - {per.numerodoc}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    <Input\r\n                                        id=\"paren\"\r\n\r\n                                        className=\"form-control ml-2\"\r\n                                        name=\"paren\"\r\n                                        bsSize=\"md\"\r\n                                        type=\"select\"\r\n                                        value={this.state.paren}\r\n                                        onChange={this.handleChange}>\r\n\r\n                                        <option selected=\"true\" disabled=\"disabled\">Parentesco</option>\r\n                                        <option value='Padre'>Padre</option>\r\n                                        <option value='Madre'>Madre</option>\r\n                                        <option value='Hij@'>Hij@</option>\r\n                                        <option value='Ti@'>Ti@</option>\r\n                                        <option value='Herman@'>Herman@</option>\r\n                                        <option value='Prim@'>Prim@</option>\r\n                                        <option value='Espos@'>Espos@</option>\r\n                                        <option value='Abuel@'>Abuel@</option>\r\n\r\n                                    </Input>\r\n                                    <InputGroupAddon addonType=\"prepend\" className='ml-4'>\r\n                                        <Button color=\"primary\" onClick={() => this.agregarParen()} >Agregar Parentesco</Button>\r\n\r\n                                    </InputGroupAddon>\r\n\r\n                                </InputGroup>\r\n                                <div style={{ width: '35%', float: 'left' }} className='mt-3'>\r\n                                    <CrearPersona />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </div>\r\n                        <Table className=' text-center' striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='font-weight-bold'>Parentesco</th>\r\n                                    <th className='font-weight-bold'>Nombre</th>\r\n                                    <th className='font-weight-bold'>Documento</th>\r\n\r\n                                    <th className='font-weight-bold'>Eliminar</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.tablaParen.map(paren => (\r\n                                    <tr>\r\n                                        <td>{paren.paren}</td>\r\n                                        <td>{paren.nombre}</td>\r\n                                        <td>{paren.doc}</td>\r\n\r\n                                        <td><Button onClick={() => this.borrarParen(paren.nombre)} color='danger'><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></Button></td>\r\n                                    </tr>\r\n                                ))}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                    </ModalBody>\r\n                    <ModalFooter >\r\n                        <Button color=\"success\" onClick={() => this.crearParent()} >Crear Parentesco</Button>\r\n\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n\r\n\r\n                {/* Modal Emergencia */}\r\n\r\n                <Modal\r\n                    size=\"lg\"\r\n                    centered isOpen={this.state.modalEmer} id=\"insertar\">\r\n                    <ModalHeader>\r\n                        <div><h3>Datos de Emergencia</h3></div>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"mb-3\" style={{ width: '80%', float: 'left' }} >\r\n                            <FormGroup >\r\n                                <InputGroup>\r\n                                    <InputGroupAddon addonType=\"prepend\" className=''>\r\n                                        <Button color=\"primary\" onClick={() => this.recargarP()} ><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></Button>\r\n\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        id=\"perEmer\"\r\n\r\n                                        className=\"form-control\"\r\n                                        name=\"perEmer\"\r\n                                        bsSize=\"md\"\r\n                                        type=\"select\"\r\n                                        value={this.state.perEmer}\r\n                                        onChange={this.handleChange}>\r\n\r\n                                        <option selected=\"true\" disabled=\"disabled\">Personas</option>\r\n                                        {this.state.personas.map(per => (\r\n                                            <option value={per.idpersona}>\r\n                                                {per.nombre}  {per.apellido} - {per.numerodoc}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    <Input\r\n                                        id=\"emer\"\r\n\r\n                                        className=\"form-control ml-2\"\r\n                                        name=\"emer\"\r\n                                        bsSize=\"md\"\r\n                                        type=\"select\"\r\n                                        value={this.state.emer}\r\n                                        onChange={this.handleChange}>\r\n\r\n                                        <option selected=\"true\" disabled=\"disabled\">Relación</option>\r\n                                        <option value='Familiar'>Familiar</option>\r\n                                        <option value='Vecino'>Vecino</option>\r\n                                        <option value='Amigo'>Amigo</option>\r\n\r\n                                    </Input>\r\n                                    <InputGroupAddon addonType=\"prepend\" className='ml-4'>\r\n                                        <Button color=\"primary\" onClick={() => this.agregarEmer()} >Agregar Contacto de Emergencia</Button>\r\n\r\n                                    </InputGroupAddon>\r\n\r\n                                </InputGroup>\r\n                                <div style={{ width: '30%', float: 'left' }} className='mt-3'>\r\n                                    <CrearPersona />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </div>\r\n                        <Table className=' text-center' striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='font-weight-bold'>Relacion</th>\r\n                                    <th className='font-weight-bold'>Nombre</th>\r\n                                    <th className='font-weight-bold'>Documento</th>\r\n                                    <th className='font-weight-bold'>Email</th>\r\n                                    <th className='font-weight-bold'>Telefono</th>\r\n\r\n                                    <th className='font-weight-bold'>Eliminar</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.tablaEmer.map(emer => (\r\n                                    <tr>\r\n                                        <td>{emer.rela}</td>\r\n                                        <td>{emer.nombre}</td>\r\n                                        <td>{emer.doc}</td>\r\n                                        <td><Button onClick={() => this.emailEmer(emer.id)} color='secondary'><i class=\"fa fa-envelope-o\" aria-hidden=\"true\"></i></Button></td>\r\n                                        <td><Button onClick={() => this.telEmer(emer.id)} color='secondary'><i class=\"fa fa-phone\" aria-hidden=\"true\"></i></Button></td>\r\n                                        <td><Button onClick={() => this.borrarEmer(emer.nombre)} color='danger'><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></Button></td>\r\n                                    </tr>\r\n                                ))}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                    </ModalBody>\r\n                    <ModalFooter >\r\n                        <Button color=\"success\" onClick={() => this.crearEmer()} >Enviar Datos de Emergencia</Button>\r\n\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                {/* Modal Email */}\r\n\r\n                <Modal\r\n                    size=\"md\"\r\n                    centered isOpen={this.state.modalEmail} id=\"insertar\">\r\n                    <ModalHeader>\r\n                        <div><h3>Datos de Emergencia Emails</h3></div>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"mb-3\" style={{ width: '80%', float: 'left' }} >\r\n                            <FormGroup >\r\n\r\n                                <InputGroup>\r\n\r\n                                    <Input\r\n                                        id=\"emerEma\"\r\n\r\n                                        className=\"form-control ml-2\"\r\n                                        name=\"emerEma\"\r\n                                        bsSize=\"md\"\r\n                                        type=\"email\"\r\n                                        value={this.state.emerEma}\r\n                                        required\r\n                                        onChange={this.handleChange}>\r\n\r\n                                    </Input>\r\n                                    <InputGroupAddon addonType=\"prepend\" className='ml-4'>\r\n                                        <Button color=\"primary\" onClick={() => this.emerEmailAgre()} >Agregar Email</Button>\r\n\r\n                                    </InputGroupAddon>\r\n\r\n                                </InputGroup>\r\n\r\n                            </FormGroup>\r\n                        </div>\r\n                        <Table className=' text-center' striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='font-weight-bold'>Id</th>\r\n                                    <th className='font-weight-bold'>Email</th>\r\n                                    <th className='font-weight-bold'>Eliminar</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.emailEmer.map((ema, index) => (\r\n                                    <tr>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{ema.email}</td>\r\n                                        <td><Button onClick={() => this.borrarEmaEmer(ema.email)} color='danger'><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></Button></td>\r\n                                    </tr>\r\n                                ))}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                    </ModalBody>\r\n                    <ModalFooter >\r\n                        <Button color=\"success\" onClick={() => this.creaEmerEmail()} >Enviar Datos de Emergencia</Button>\r\n                        <Button color=\"danger\" onClick={() => this.cancelarEmail()} >Cerrar</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n\r\n                {/* Modal Tel */}\r\n\r\n                <Modal\r\n                    size=\"md\"\r\n                    centered isOpen={this.state.modalTel} id=\"insertar\">\r\n                    <ModalHeader>\r\n                        <div><h3>Datos de Emergencia Telefonos</h3></div>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"mb-3\" style={{ width: '80%', float: 'left' }} >\r\n                            <FormGroup >\r\n\r\n                                <InputGroup>\r\n\r\n                                    <Input\r\n                                        id=\"emerTel\"\r\n\r\n                                        className=\"form-control ml-2\"\r\n                                        name=\"emerTel\"\r\n                                        bsSize=\"md\"\r\n                                        type=\"number\"\r\n                                        value={this.state.emerTel}\r\n                                        required\r\n                                        onChange={this.handleChange}>\r\n\r\n                                    </Input>\r\n                                    <InputGroupAddon addonType=\"prepend\" className='ml-4'>\r\n                                        <Button color=\"primary\" onClick={() => this.emerTelAgre()} >Agregar Telefono</Button>\r\n\r\n                                    </InputGroupAddon>\r\n\r\n                                </InputGroup>\r\n\r\n                            </FormGroup>\r\n                        </div>\r\n                        <Table className=' text-center' striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='font-weight-bold'>Id</th>\r\n                                    <th className='font-weight-bold'>Telefono</th>\r\n                                    <th className='font-weight-bold'>Eliminar</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.telEmer.map((tel, index) => (\r\n                                    <tr>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{tel.telefono}</td>\r\n                                        <td><Button onClick={() => this.borrarTelEmer(tel.telefono)} color='danger'><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></Button></td>\r\n                                    </tr>\r\n                                ))}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                    </ModalBody>\r\n                    <ModalFooter >\r\n                        <Button color=\"success\" onClick={() => this.creaEmerTel()} >Enviar Datos de Emergencia</Button>\r\n                        <Button color=\"danger\" onClick={() => this.cancelarTel()} >Cerrar</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n\r\n            </Fragment >\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport Informes from '../Informes';\r\n\r\n\r\nexport default class InformesAdmin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    \r\n                </div>\r\n                <div>\r\n                    <Informes />\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport Mapa from '../Mapa/Mapa';\r\n\r\n\r\nexport default class MapaAdmin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    \r\n                </div>\r\n                <div>\r\n                    <Mapa />\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route, Link, Redirect } from 'react-router-dom';\r\nimport \"../Login/syle.scss\";\r\nimport CrearDoctor from './crearDoctor';\r\nimport '../InterfazDoc/style.scss';\r\nimport InformesAdmin from './informesAdmin';\r\nimport MapaAdmin from './mapaAdmin';\r\nimport { Button } from 'reactstrap';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport 'sweetalert2/src/sweetalert2.scss';\r\n\r\nexport default class NavAdmin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nickname: '',\r\n            contraseña: '',\r\n            nombre: '',\r\n            apellido: '',\r\n            idpersona: '',\r\n            idusuario: '',\r\n            doc: '',\r\n            match: null,\r\n            redirect: null,\r\n            id: null,\r\n\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        await this.setState({\r\n            match : this.props.match.params,\r\n            //id: this.state.match.id\r\n        })\r\n        \r\n        const algo = parseInt(this.state.match.id)\r\n        this.setState({\r\n            id: algo\r\n        })\r\n        await fetch(`http://localhost:5000/usuariopersox/${algo}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        nickname: result[0].nickname,\r\n                        contraseña: result[0].contraseña,\r\n                        nombre: result[0].nombre,\r\n                        apellido: result[0].apellido,\r\n                        idpersona: result[0].idpersona,\r\n                        idusuario: result[0].idusuario,\r\n                        doc: result[0].numerodoc\r\n                    });\r\n                }\r\n            )\r\n\r\n    }\r\n\r\n    logOut() {\r\n        Swal.fire({\r\n            title: 'Esta Seguro ?',\r\n            text: \"Desea Cerrar Sesión ?\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si !'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                this.setState({ redirect: '/' })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        //this.state.match = this.props.match.params;\r\n        //console.log(this.state.match)\r\n        \r\n        \r\n        if (this.state.redirect) {\r\n\r\n            return <Redirect to={\r\n                this.state.redirect\r\n            } />\r\n\r\n        }\r\n\r\n        return (\r\n            <BrowserRouter >\r\n                <div className=\"total\">\r\n                    <nav class=\"navbar navbar-expand-lg navbar-light bg-primary\">\r\n\r\n                        <h1 class=\"navbar-brand ml-3 font-weight-bold \" >Bienvenido Admin {this.state.nombre}  {this.state.apellido} </h1>\r\n                        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span class=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                            <ul class=\"navbar-nav ml-auto mr-5\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"btn font-weight-bold\" to={`/NavAdmin/${this.state.id}/MapaAdmin`} activeClassName=\"active\"> Mapa <i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i></Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"btn font-weight-bold\" to={`/NavAdmin/${this.state.id}/InformesAdmin`} activeClassName=\"active\"> Informes <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i></Link>\r\n                                </li>\r\n                                <li >\r\n                                    <Link className=\"btn font-weight-bold\" to={`/NavAdmin/${this.state.id}`} activeClassName=\"active\"> Crear Doctor o Paciente <i class=\"fa fa-hospital-o\" aria-hidden=\"true\"></i></Link>\r\n                                </li>\r\n                                <li >\r\n                                    <Button color='info' className=\"btn font-weight-bold ml-2\" onClick={() => this.logOut()} activeClassName=\"active\"> LogOut <i class=\"fa fa-sign-out\" aria-hidden=\"true\"></i></Button>\r\n                                </li>\r\n\r\n\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n\r\n                    <Switch>\r\n                        <Route path=\"/NavAdmin/:id/MapaAdmin\">\r\n                            <MapaAdmin />\r\n                        </Route>\r\n                        <Route path=\"/NavAdmin/:id/InformesAdmin\">\r\n                            <InformesAdmin />\r\n                        </Route>\r\n                        <Route exact path=\"/NavAdmin/:id\">\r\n                            <CrearDoctor id={this.state.doc} idusu={this.state.idusuario}/>\r\n                        </Route>\r\n\r\n\r\n\r\n                    </Switch>\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport LoginPrin from './LoginPrin';\r\nimport NavDoc from './Componentes/InterfazDoc/navDoc';\r\nimport NavAdmin from './Componentes/interfazAdmin/navAdmin';\r\n\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route  path=\"/NavDoc/:id\" component={NavDoc} />\r\n                <Route  path=\"/NavAdmin/:id\" component={NavAdmin} />\r\n\r\n                <Route path=\"/\" component={LoginPrin} />\r\n\r\n\r\n            </Switch>\r\n\r\n        </Router>\r\n    )\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Routes.js';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  \r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}